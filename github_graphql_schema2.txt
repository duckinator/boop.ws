{'__schema': {'queryType': {'name': 'Query'}, 'mutationType': {'name': 'Mutation'}, 'subscriptionType': None, 'types': [{'kind': 'SCALAR', 'name': 'Boolean', 'description': 'Represents `true` or `false` values.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'SCALAR', 'name': 'String', 'description': 'Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': '__Type', 'description': 'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.', 'fields': [{'name': 'description', 'description': None, 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'enumValues', 'description': None, 'args': [{'name': 'includeDeprecated', 'description': None, 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': 'false'}], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__EnumValue', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'fields', 'description': None, 'args': [{'name': 'includeDeprecated', 'description': None, 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': 'false'}], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__Field', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'inputFields', 'description': None, 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__InputValue', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'interfaces', 'description': None, 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__Type', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'kind', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': '__TypeKind', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': None, 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ofType', 'description': None, 'args': [], 'type': {'kind': 'OBJECT', 'name': '__Type', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'possibleTypes', 'description': None, 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__Type', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': '__TypeKind', 'description': 'An enum describing what kind of type a given `__Type` is.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'SCALAR', 'description': 'Indicates this type is a scalar.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'OBJECT', 'description': 'Indicates this type is an object. `fields` and `interfaces` are valid fields.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'INTERFACE', 'description': 'Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UNION', 'description': 'Indicates this type is a union. `possibleTypes` is a valid field.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ENUM', 'description': 'Indicates this type is an enum. `enumValues` is a valid field.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'INPUT_OBJECT', 'description': 'Indicates this type is an input object. `inputFields` is a valid field.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'LIST', 'description': 'Indicates this type is a list. `ofType` is a valid field.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'NON_NULL', 'description': 'Indicates this type is a non-null. `ofType` is a valid field.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': '__Field', 'description': 'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.', 'fields': [{'name': 'args', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__InputValue', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deprecationReason', 'description': None, 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': None, 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isDeprecated', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'type', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__Type', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': '__InputValue', 'description': 'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.', 'fields': [{'name': 'defaultValue', 'description': 'A GraphQL-formatted string representing the default value for this input value.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': None, 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'type', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__Type', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': '__EnumValue', 'description': 'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.', 'fields': [{'name': 'deprecationReason', 'description': None, 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': None, 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isDeprecated', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Query', 'description': "The query root of GitHub's GraphQL interface.", 'fields': [{'name': 'codeOfConduct', 'description': 'Look up a code of conduct by its key', 'args': [{'name': 'key', 'description': "The code of conduct's key", 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'CodeOfConduct', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'codesOfConduct', 'description': 'Look up a code of conduct by its key', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CodeOfConduct', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'license', 'description': 'Look up an open source license by its key', 'args': [{'name': 'key', 'description': "The license's downcased SPDX ID", 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'License', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'licenses', 'description': 'Return a list of known open source licenses', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'License', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'marketplaceCategories', 'description': 'Get alphabetically sorted list of Marketplace categories', 'args': [{'name': 'excludeEmpty', 'description': 'Exclude categories with no listings.', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'MarketplaceCategory', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'marketplaceCategory', 'description': 'Look up a Marketplace category by its slug.', 'args': [{'name': 'slug', 'description': 'The URL slug of the category.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'MarketplaceCategory', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'marketplaceListing', 'description': 'Look up a single Marketplace listing', 'args': [{'name': 'slug', 'description': "Select the listing that matches this slug. It's the short name of the listing used in its URL.", 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'MarketplaceListing', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'marketplaceListings', 'description': 'Look up Marketplace listings', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'categorySlug', 'description': 'Select only listings with the given category.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'viewerCanAdmin', 'description': 'Select listings to which user has admin access. If omitted, listings visible to the\nviewer are returned.\n', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}, {'name': 'adminId', 'description': 'Select listings that can be administered by the specified user.', 'type': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}, 'defaultValue': None}, {'name': 'organizationId', 'description': 'Select listings for products owned by the specified organization.', 'type': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}, 'defaultValue': None}, {'name': 'allStates', 'description': 'Select listings visible to the viewer even if they are not approved. If omitted or\nfalse, only approved listings will be returned.\n', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}, {'name': 'slugs', 'description': 'Select the listings with these slugs, if they are visible to the viewer.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}, {'name': 'primaryCategoryOnly', 'description': 'Select only listings where the primary category matches the given category slug.', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': 'false'}, {'name': 'withFreeTrialsOnly', 'description': 'Select only listings that offer a free trial.', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': 'false'}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'MarketplaceListingConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'meta', 'description': 'Return information about the GitHub instance', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'GitHubMetadata', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'Fetches an object given its ID.', 'args': [{'name': 'id', 'description': 'ID of the object.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'Lookup nodes by a list of IDs.', 'args': [{'name': 'ids', 'description': 'The list of node IDs.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'organization', 'description': 'Lookup a organization by login.', 'args': [{'name': 'login', 'description': "The organization's login.", 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'rateLimit', 'description': "The client's rate limit information.", 'args': [{'name': 'dryRun', 'description': 'If true, calculate the cost for the query without evaluating it', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': 'false'}], 'type': {'kind': 'OBJECT', 'name': 'RateLimit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'relay', 'description': 'Hack to workaround https://github.com/facebook/relay/issues/112 re-exposing the root query object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Query', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'Lookup a given repository by the owner and repository name.', 'args': [{'name': 'owner', 'description': 'The login field of a user or organization', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}, {'name': 'name', 'description': 'The name of the repository', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repositoryOwner', 'description': 'Lookup a repository owner (ie. either a User or an Organization) by login.', 'args': [{'name': 'login', 'description': 'The username to lookup the owner by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'INTERFACE', 'name': 'RepositoryOwner', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resource', 'description': 'Lookup resource by a URL.', 'args': [{'name': 'url', 'description': 'The URL.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'search', 'description': 'Perform a search across resources.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'query', 'description': 'The search string to look for.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}, {'name': 'type', 'description': 'The types of search items to search within.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'SearchType', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'SearchResultItemConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'topic', 'description': 'Look up a topic by name.', 'args': [{'name': 'name', 'description': "The topic's name.", 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Topic', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'user', 'description': 'Lookup a user by login.', 'args': [{'name': 'login', 'description': "The user's login.", 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewer', 'description': 'The currently authenticated user.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'Node', 'description': 'An object with an ID.', 'fields': [{'name': 'id', 'description': 'ID of the object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'AddedToProjectEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'AssignedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'BaseRefChangedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'BaseRefForcePushedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Blob', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Bot', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ClosedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'CommentDeletedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, {'kind': 'OBJECT', 'name': 'CommitComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'CommitCommentThread', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ConvertedNoteToIssueEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'CrossReferencedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'DemilestonedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'DeployKey', 'ofType': None}, {'kind': 'OBJECT', 'name': 'DeployedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Deployment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'DeploymentStatus', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ExternalIdentity', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Gist', 'ofType': None}, {'kind': 'OBJECT', 'name': 'GistComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'HeadRefDeletedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'HeadRefForcePushedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'HeadRefRestoredEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Label', 'ofType': None}, {'kind': 'OBJECT', 'name': 'LabeledEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Language', 'ofType': None}, {'kind': 'OBJECT', 'name': 'LockedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'MarketplaceListing', 'ofType': None}, {'kind': 'OBJECT', 'name': 'MentionedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'MergedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Milestone', 'ofType': None}, {'kind': 'OBJECT', 'name': 'MilestonedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'MovedColumnsInProjectEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}, {'kind': 'OBJECT', 'name': 'OrganizationIdentityProvider', 'ofType': None}, {'kind': 'OBJECT', 'name': 'OrganizationInvitation', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ProjectCard', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ProjectColumn', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ProtectedBranch', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PublicKey', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestCommit', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewThread', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PushAllowance', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Reaction', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReferencedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Release', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReleaseAsset', 'ofType': None}, {'kind': 'OBJECT', 'name': 'RemovedFromProjectEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'RenamedTitleEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReopenedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, {'kind': 'OBJECT', 'name': 'RepositoryInvitation', 'ofType': None}, {'kind': 'OBJECT', 'name': 'RepositoryTopic', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReviewDismissalAllowance', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReviewDismissedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReviewRequest', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReviewRequestRemovedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReviewRequestedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Status', 'ofType': None}, {'kind': 'OBJECT', 'name': 'StatusContext', 'ofType': None}, {'kind': 'OBJECT', 'name': 'SubscribedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Tag', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Team', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Topic', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Tree', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnassignedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnlabeledEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnlockedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnsubscribedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'User', 'ofType': None}]}, {'kind': 'SCALAR', 'name': 'ID', 'description': 'Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"VXNlci0xMA=="`) or integer (such as `4`) input value will be accepted as an ID.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'description': 'Represents a type that can be retrieved by a URL.', 'fields': [{'name': 'resourcePath', 'description': 'The HTML path to this resource.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The URL to this resource.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Bot', 'ofType': None}, {'kind': 'OBJECT', 'name': 'CrossReferencedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'MergedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Milestone', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestCommit', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Release', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, {'kind': 'OBJECT', 'name': 'RepositoryTopic', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReviewDismissedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'User', 'ofType': None}]}, {'kind': 'SCALAR', 'name': 'URI', 'description': 'An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'User', 'description': "A user is an individual's account on GitHub that owns repositories and can make new content.", 'fields': [{'name': 'avatarUrl', 'description': "A URL pointing to the user's public avatar.", 'args': [{'name': 'size', 'description': 'The size of the resulting square image.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bio', 'description': "The user's public profile bio.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bioHTML', 'description': "The user's public profile bio as HTML.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitComments', 'description': 'A list of commit comments made by this user.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CommitCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'company', 'description': "The user's public profile company.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'companyHTML', 'description': "The user's public profile company as HTML.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'contributedRepositories', 'description': 'A list of repositories that the user recently contributed to.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters repositories according to privacy', 'type': {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for repositories returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'affiliations', 'description': 'Affiliation options for repositories returned from the connection', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryAffiliation', 'ofType': None}}, 'defaultValue': None}, {'name': 'isLocked', 'description': 'If non-null, filters repositories according to whether they have been locked', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'Use repositoriesContributedTo instead.'}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'email', 'description': "The user's publicly visible profile email.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'followers', 'description': 'A list of users the given user is followed by.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'FollowerConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'following', 'description': 'A list of users the given user is following.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'FollowingConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'gist', 'description': 'Find gist by repo name.', 'args': [{'name': 'name', 'description': 'The gist name to find.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Gist', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'gistComments', 'description': 'A list of gist comments made by this user.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'GistCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'gists', 'description': 'A list of the Gists the user has created.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'Filters Gists according to privacy.', 'type': {'kind': 'ENUM', 'name': 'GistPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for gists returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'GistOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'GistConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isBountyHunter', 'description': 'Whether or not this user is a participant in the GitHub Security Bug Bounty.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isCampusExpert', 'description': 'Whether or not this user is a participant in the GitHub Campus Experts Program.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isDeveloperProgramMember', 'description': 'Whether or not this user is a GitHub Developer Program member.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isEmployee', 'description': 'Whether or not this user is a GitHub employee.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isHireable', 'description': 'Whether or not the user has marked themselves as for hire.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isSiteAdmin', 'description': 'Whether or not this user is a site administrator.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isViewer', 'description': 'Whether or not this user is the viewing user.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'issueComments', 'description': 'A list of issue comments made by this user.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'issues', 'description': 'A list of issues assocated with this user.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'labels', 'description': 'A list of label names to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for issues returned from the connection.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'IssueOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the issues by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'IssueState', 'ofType': None}}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'location', 'description': "The user's public profile location.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'login', 'description': 'The username used to login.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': "The user's public profile name.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'organization', 'description': 'Find an organization by its login that the user belongs to.', 'args': [{'name': 'login', 'description': 'The login of the organization to find.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'organizations', 'description': 'A list of organizations the user belongs to.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'OrganizationConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pinnedRepositories', 'description': 'A list of repositories this user has pinned to their profile', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters repositories according to privacy', 'type': {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for repositories returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'affiliations', 'description': 'Affiliation options for repositories returned from the connection', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryAffiliation', 'ofType': None}}, 'defaultValue': None}, {'name': 'isLocked', 'description': 'If non-null, filters repositories according to whether they have been locked', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'publicKeys', 'description': 'A list of public keys associated with this user.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PublicKeyConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequests', 'description': 'A list of pull requests assocated with this user.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'PullRequestState', 'ofType': None}}}, 'defaultValue': None}, {'name': 'labels', 'description': 'A list of label names to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}, {'name': 'headRefName', 'description': 'The head ref name to filter the pull requests by.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'baseRefName', 'description': 'The base ref name to filter the pull requests by.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for pull requests returned from the connection.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'IssueOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repositories', 'description': 'A list of repositories that the user owns.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters repositories according to privacy', 'type': {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for repositories returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'affiliations', 'description': 'Affiliation options for repositories returned from the connection', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryAffiliation', 'ofType': None}}, 'defaultValue': None}, {'name': 'isLocked', 'description': 'If non-null, filters repositories according to whether they have been locked', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}, {'name': 'isFork', 'description': 'If non-null, filters repositories according to whether they are forks of another repository', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repositoriesContributedTo', 'description': 'A list of repositories that the user recently contributed to.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters repositories according to privacy', 'type': {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for repositories returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'isLocked', 'description': 'If non-null, filters repositories according to whether they have been locked', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}, {'name': 'includeUserRepositories', 'description': 'If true, include user repositories', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}, {'name': 'contributionTypes', 'description': 'If non-null, include only the specified types of contributions. The GitHub.com UI uses [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY]', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryContributionType', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'Find Repository.', 'args': [{'name': 'name', 'description': 'Name of Repository to find.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this user', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'starredRepositories', 'description': 'Repositories the user has starred.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'ownedByViewer', 'description': 'Filters starred repositories to only return repositories owned by the viewer.', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Order for connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'StarOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'StarredRepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this user', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanFollow', 'description': 'Whether or not the viewer is able to follow the user.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerIsFollowing', 'description': 'Whether or not this user is followed by the viewer.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'watching', 'description': 'A list of repositories the given user is watching.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters repositories according to privacy', 'type': {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for repositories returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'affiliations', 'description': 'Affiliation options for repositories returned from the connection', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryAffiliation', 'ofType': None}}, 'defaultValue': None}, {'name': 'isLocked', 'description': 'If non-null, filters repositories according to whether they have been locked', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'websiteUrl', 'description': "A URL pointing to the user's public website/blog.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'RepositoryOwner', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'Actor', 'description': 'Represents an object which can take actions on GitHub. Typically a User or Bot.', 'fields': [{'name': 'avatarUrl', 'description': "A URL pointing to the actor's public avatar.", 'args': [{'name': 'size', 'description': 'The size of the resulting square image.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'login', 'description': 'The username of the actor.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this actor.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for this actor.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Bot', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}, {'kind': 'OBJECT', 'name': 'User', 'ofType': None}]}, {'kind': 'SCALAR', 'name': 'Int', 'description': 'Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Repository', 'description': 'A repository contains the content for a project.', 'fields': [{'name': 'assignableUsers', 'description': 'A list of users that can be assigned to issues in this repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'codeOfConduct', 'description': 'Returns the code of conduct for this repository', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'CodeOfConduct', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'collaborators', 'description': 'A list of collaborators associated with the repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'affiliation', 'description': 'Collaborators affiliation level with a repository.', 'type': {'kind': 'ENUM', 'name': 'CollaboratorAffiliation', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'RepositoryCollaboratorConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitComments', 'description': 'A list of commit comments associated with the repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CommitCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'defaultBranchRef', 'description': "The Ref associated with the repository's default branch.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deployKeys', 'description': 'A list of protected branches that are on this repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'DeployKeyConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deployments', 'description': 'Deployments associated with the repository', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'environments', 'description': 'Environments to list deployments for', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'DeploymentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': 'The description of the repository.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'descriptionHTML', 'description': 'The description of the repository rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'diskUsage', 'description': 'The number of kilobytes this repository occupies on disk.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'forkCount', 'description': 'Returns how many forks there are of this repository in the whole network.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'forks', 'description': 'A list of direct forked repositories.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters repositories according to privacy', 'type': {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for repositories returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'affiliations', 'description': 'Affiliation options for repositories returned from the connection', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryAffiliation', 'ofType': None}}, 'defaultValue': None}, {'name': 'isLocked', 'description': 'If non-null, filters repositories according to whether they have been locked', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasIssuesEnabled', 'description': 'Indicates if the repository has issues feature enabled.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasWikiEnabled', 'description': 'Indicates if the repository has wiki feature enabled.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'homepageUrl', 'description': "The repository's URL.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isArchived', 'description': 'Indicates if the repository is unmaintained.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isFork', 'description': 'Identifies if the repository is a fork.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isLocked', 'description': 'Indicates if the repository has been locked or not.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isMirror', 'description': 'Identifies if the repository is a mirror.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isPrivate', 'description': 'Identifies if the repository is private.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'issue', 'description': 'Returns a single issue from the current repository by number.', 'args': [{'name': 'number', 'description': 'The number for the issue to be returned.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'issueOrPullRequest', 'description': 'Returns a single issue-like object from the current repository by number.', 'args': [{'name': 'number', 'description': 'The number for the issue to be returned.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'UNION', 'name': 'IssueOrPullRequest', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'issues', 'description': 'A list of issues that have been opened in the repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'labels', 'description': 'A list of label names to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for issues returned from the connection.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'IssueOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the issues by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'IssueState', 'ofType': None}}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'label', 'description': 'Returns a single label by name', 'args': [{'name': 'name', 'description': 'Label name', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Label', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'labels', 'description': 'A list of labels associated with the repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'LabelConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'languages', 'description': 'A list containing a breakdown of the language composition of the repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Order for connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'LanguageOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'LanguageConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'license', 'description': 'The license associated with the repository', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Use Repository.licenseInfo instead.'}, {'name': 'licenseInfo', 'description': 'The license associated with the repository', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'License', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lockReason', 'description': 'The reason the repository has been locked.', 'args': [], 'type': {'kind': 'ENUM', 'name': 'RepositoryLockReason', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'mentionableUsers', 'description': 'A list of Users that can be mentioned in the context of the repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'milestone', 'description': 'Returns a single milestone from the current repository by number.', 'args': [{'name': 'number', 'description': 'The number for the milestone to be returned.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Milestone', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'milestones', 'description': 'A list of milestones associated with the repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'MilestoneConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'mirrorUrl', 'description': "The repository's original mirror URL.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The name of the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nameWithOwner', 'description': "The repository's name with owner.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'object', 'description': 'A Git object in the repository', 'args': [{'name': 'oid', 'description': 'The Git object ID', 'type': {'kind': 'SCALAR', 'name': 'GitObjectID', 'ofType': None}, 'defaultValue': None}, {'name': 'expression', 'description': 'A Git revision expression suitable for rev-parse', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'INTERFACE', 'name': 'GitObject', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'owner', 'description': 'The User owner of the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'RepositoryOwner', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'parent', 'description': 'The repository parent, if this is a fork.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'primaryLanguage', 'description': "The primary language of the repository's code.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Language', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'project', 'description': 'Find project by number.', 'args': [{'name': 'number', 'description': 'The project number to find.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projects', 'description': 'A list of projects under the owner.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for projects returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'ProjectOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'search', 'description': 'Query to search projects by, currently only searching by name.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the projects by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ProjectState', 'ofType': None}}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectsResourcePath', 'description': "The HTTP path listing repository's projects", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectsUrl', 'description': "The HTTP URL listing repository's projects", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'protectedBranches', 'description': 'A list of protected branches that are on this repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProtectedBranchConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'Returns a single pull request from the current repository by number.', 'args': [{'name': 'number', 'description': 'The number for the pull request to be returned.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequests', 'description': 'A list of pull requests that have been opened in the repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'PullRequestState', 'ofType': None}}}, 'defaultValue': None}, {'name': 'labels', 'description': 'A list of label names to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}, {'name': 'headRefName', 'description': 'The head ref name to filter the pull requests by.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'baseRefName', 'description': 'The base ref name to filter the pull requests by.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for pull requests returned from the connection.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'IssueOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pushedAt', 'description': 'Identifies when the repository was last pushed to.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ref', 'description': 'Fetch a given ref from the repository', 'args': [{'name': 'qualifiedName', 'description': 'The ref to retrieve.Fully qualified matches are checked in order (`refs/heads/master`) before falling back onto checks for short name matches (`master`).', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'refs', 'description': 'Fetch a list of refs from the repository', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'refPrefix', 'description': 'A ref name prefix like `refs/heads/`, `refs/tags/`, etc.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'DEPRECATED: use orderBy. The ordering direction.', 'type': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for refs returned from the connection.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RefOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'RefConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'release', 'description': 'Lookup a single release given various criteria.', 'args': [{'name': 'tagName', 'description': 'The name of the Tag the Release was created from', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Release', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'releases', 'description': 'List of releases which are dependent on this repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Order for connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'ReleaseOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReleaseConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repositoryTopics', 'description': 'A list of applied repository-topic associations for this repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryTopicConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this repository', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'shortDescriptionHTML', 'description': 'A description of the repository, rendered to HTML without any links in it.', 'args': [{'name': 'limit', 'description': 'How many characters to return.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': '200'}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'sshUrl', 'description': 'The SSH URL to clone this repository', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'GitSSHRemote', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'stargazers', 'description': 'A list of users who have starred this starrable.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Order for connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'StarOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'StargazerConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this repository', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanAdminister', 'description': 'Indicates whether the viewer has admin permissions on this repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanCreateProjects', 'description': 'Can the current viewer create new projects on this owner.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanSubscribe', 'description': 'Check if the viewer is able to change their subscription status for the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanUpdateTopics', 'description': 'Indicates whether the viewer can update the topics of this repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerHasStarred', 'description': 'Returns a boolean indicating whether the viewing user has starred this starrable.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerSubscription', 'description': 'Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'SubscriptionState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'watchers', 'description': 'A list of users watching the repository.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'ProjectOwner', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Subscribable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Starrable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'RepositoryInfo', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'ProjectOwner', 'description': 'Represents an owner of a Project.', 'fields': [{'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'project', 'description': 'Find project by number.', 'args': [{'name': 'number', 'description': 'The project number to find.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projects', 'description': 'A list of projects under the owner.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for projects returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'ProjectOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'search', 'description': 'Query to search projects by, currently only searching by name.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the projects by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ProjectState', 'ofType': None}}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectsResourcePath', 'description': 'The HTTP path listing owners projects', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectsUrl', 'description': 'The HTTP URL listing owners projects', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanCreateProjects', 'description': 'Can the current viewer create new projects on this owner.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'Project', 'description': 'Projects manage issues, pull requests and notes within a project owner.', 'fields': [{'name': 'body', 'description': "The project's description body.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyHTML', 'description': 'The projects description body rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'closed', 'description': '`true` if the object is closed (definition of closed may depend on type)', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'closedAt', 'description': 'Identifies the date and time when the object was closed.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'columns', 'description': 'List of columns in the project', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectColumnConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'creator', 'description': 'The actor who originally created the project.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': "The project's name.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'number', 'description': "The project's number.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'owner', 'description': "The project's owner. Currently limited to repositories and organizations.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'ProjectOwner', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pendingCards', 'description': 'List of pending cards in this project', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectCardConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this project', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'Whether the project is open or closed.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ProjectState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this project', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanUpdate', 'description': 'Check if the current viewer can update this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Closable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Updatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'Closable', 'description': 'An object that can be closed', 'fields': [{'name': 'closed', 'description': '`true` if the object is closed (definition of closed may depend on type)', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'closedAt', 'description': 'Identifies the date and time when the object was closed.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Milestone', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}]}, {'kind': 'SCALAR', 'name': 'DateTime', 'description': 'An ISO-8601 encoded UTC date string.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'Updatable', 'description': 'Entities that can be updated.', 'fields': [{'name': 'viewerCanUpdate', 'description': 'Check if the current viewer can update this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'CommitComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'GistComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}]}, {'kind': 'ENUM', 'name': 'ProjectState', 'description': "State of the project; either 'open' or 'closed'", 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'OPEN', 'description': 'The project is open.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'CLOSED', 'description': 'The project is closed.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'SCALAR', 'name': 'HTML', 'description': 'A string containing HTML code.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProjectColumnConnection', 'description': 'The connection type for ProjectColumn.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectColumnEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectColumn', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProjectColumnEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'ProjectColumn', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProjectColumn', 'description': 'A column inside a project.', 'fields': [{'name': 'cards', 'description': 'List of cards in the column', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectCardConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': "The project column's name.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'project', 'description': 'The project that contains this column.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this project column', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this project column', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProjectCardConnection', 'description': 'The connection type for ProjectCard.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectCardEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectCard', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProjectCardEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'ProjectCard', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProjectCard', 'description': 'A card in a project.', 'fields': [{'name': 'column', 'description': 'The project column this card is associated under. A card may only belong to one\nproject column at a time. The column field will be null if the card is created\nin a pending state and has yet to be associated with a column. Once cards are\nassociated with a column, they will not become pending in the future.\n', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'ProjectColumn', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'content', 'description': 'The card content item', 'args': [], 'type': {'kind': 'UNION', 'name': 'ProjectCardItem', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'creator', 'description': 'The actor who created this card', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'note', 'description': 'The card note', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'project', 'description': 'The project that contains this card.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectColumn', 'description': 'The column that contains this card.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectColumn', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'Use ProjectCard.column instead. The associated column will be null if the card is in a pending state.'}, {'name': 'resourcePath', 'description': 'The HTTP path for this card', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'The state of ProjectCard', 'args': [], 'type': {'kind': 'ENUM', 'name': 'ProjectCardState', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this card', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'ProjectCardState', 'description': 'Various content states of a ProjectCard', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'CONTENT_ONLY', 'description': 'The card has content only.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'NOTE_ONLY', 'description': 'The card has a note only.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'REDACTED', 'description': 'The card is redacted.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'UNION', 'name': 'ProjectCardItem', 'description': 'Types that can be inside Project Cards.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'Issue', 'description': 'An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.', 'fields': [{'name': 'assignees', 'description': 'A list of Users assigned to this object.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'author', 'description': 'The actor who authored the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'authorAssociation', 'description': "Author's association with the subject of the comment.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentAuthorAssociation', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'body', 'description': 'Identifies the body of the issue.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyHTML', 'description': 'Identifies the body of the issue rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyText', 'description': 'Identifies the body of the issue rendered to text.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'closed', 'description': '`true` if the object is closed (definition of closed may depend on type)', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'closedAt', 'description': 'Identifies the date and time when the object was closed.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'comments', 'description': 'A list of comments associated with the Issue.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdViaEmail', 'description': 'Check if this comment was created via an email reply.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'editor', 'description': 'The actor who edited the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'labels', 'description': 'A list of labels associated with the object.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'LabelConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lastEditedAt', 'description': 'The moment the editor made the last edit', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'locked', 'description': '`true` if the object is locked', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'milestone', 'description': 'Identifies the milestone associated with the issue.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Milestone', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'number', 'description': 'Identifies the issue number.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'participants', 'description': 'A list of Users that are participating in the Issue conversation.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectCards', 'description': 'List of project cards associated with this issue.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectCardConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'publishedAt', 'description': 'Identifies when the comment was published at.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactionGroups', 'description': 'A list of reactions grouped by content left on the subject.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionGroup', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactions', 'description': 'A list of Reactions left on the Issue.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'content', 'description': 'Allows filtering Reactions by emoji.', 'type': {'kind': 'ENUM', 'name': 'ReactionContent', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Allows specifying the order in which reactions are returned.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'ReactionOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository associated with this node.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this issue', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'Identifies the state of the issue.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'IssueState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'timeline', 'description': 'A list of events, comments, commits, etc. associated with the issue.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'since', 'description': 'Allows filtering timeline events by a `since` timestamp.', 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueTimelineConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'title', 'description': 'Identifies the issue title.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this issue', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanReact', 'description': 'Can user react to this subject', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanSubscribe', 'description': 'Check if the viewer is able to change their subscription status for the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanUpdate', 'description': 'Check if the current viewer can update this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCannotUpdateReasons', 'description': 'Reasons why the current viewer can not update this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentCannotUpdateReason', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerDidAuthor', 'description': 'Did the viewer author this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerSubscription', 'description': 'Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'SubscriptionState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Assignable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Closable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Comment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Updatable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UpdatableComment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Labelable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Lockable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Reactable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'RepositoryNode', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Subscribable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'Assignable', 'description': 'An object that can have users assigned to it.', 'fields': [{'name': 'assignees', 'description': 'A list of Users assigned to this object.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'UserConnection', 'description': 'The connection type for User.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UserEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PageInfo', 'description': 'Information about pagination in a connection.', 'fields': [{'name': 'endCursor', 'description': 'When paginating forwards, the cursor to continue.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasNextPage', 'description': 'When paginating forwards, are there more items?', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasPreviousPage', 'description': 'When paginating backwards, are there more items?', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'startCursor', 'description': 'When paginating backwards, the cursor to continue.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'Comment', 'description': 'Represents a comment.', 'fields': [{'name': 'author', 'description': 'The actor who authored the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'authorAssociation', 'description': "Author's association with the subject of the comment.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentAuthorAssociation', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'body', 'description': 'The comment body as Markdown.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyHTML', 'description': 'The comment body rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdViaEmail', 'description': 'Check if this comment was created via an email reply.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'editor', 'description': 'The actor who edited the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lastEditedAt', 'description': 'The moment the editor made the last edit', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'publishedAt', 'description': 'Identifies when the comment was published at.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'viewerDidAuthor', 'description': 'Did the viewer author this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'CommitComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'GistComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'UserContentEditEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'UserContentEdit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UserContentEdit', 'description': 'An edit on user content', 'fields': [{'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'editor', 'description': 'The actor who edited this content,', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'CommentAuthorAssociation', 'description': 'A comment author association with repository.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'MEMBER', 'description': 'Author is a member of the organization that owns the repository.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'OWNER', 'description': 'Author is the owner of the repository.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'COLLABORATOR', 'description': 'Author has been invited to collaborate on the repository.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'CONTRIBUTOR', 'description': 'Author has previously committed to the repository.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'FIRST_TIME_CONTRIBUTOR', 'description': 'Author has not previously committed to the repository.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'FIRST_TIMER', 'description': 'Author has not previously committed to GitHub.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'NONE', 'description': 'Author has no association with the repository.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'UpdatableComment', 'description': 'Comments that can be updated.', 'fields': [{'name': 'viewerCannotUpdateReasons', 'description': 'Reasons why the current viewer can not update this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentCannotUpdateReason', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'CommitComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'GistComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}]}, {'kind': 'ENUM', 'name': 'CommentCannotUpdateReason', 'description': 'The possible errors that will prevent a user from updating a comment.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'INSUFFICIENT_ACCESS', 'description': 'You must be the author or have write access to this repository to update this comment.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'LOCKED', 'description': 'Unable to create comment because issue is locked.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'LOGIN_REQUIRED', 'description': 'You must be logged in to update this comment.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'MAINTENANCE', 'description': 'Repository is under maintenance.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'VERIFIED_EMAIL_REQUIRED', 'description': 'At least one email address must be verified to update this comment.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'Labelable', 'description': 'An object that can have labels assigned to it.', 'fields': [{'name': 'labels', 'description': 'A list of labels associated with the object.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'LabelConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'LabelConnection', 'description': 'The connection type for Label.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'LabelEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Label', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'LabelEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Label', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Label', 'description': 'A label for categorizing Issues or Milestones with a given Repository.', 'fields': [{'name': 'color', 'description': 'Identifies the label color.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'issues', 'description': 'A list of issues associated with this label.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'labels', 'description': 'A list of label names to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for issues returned from the connection.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'IssueOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the issues by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'IssueState', 'ofType': None}}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'Identifies the label name.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequests', 'description': 'A list of pull requests associated with this label.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'PullRequestState', 'ofType': None}}}, 'defaultValue': None}, {'name': 'labels', 'description': 'A list of label names to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}, {'name': 'headRefName', 'description': 'The head ref name to filter the pull requests by.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'baseRefName', 'description': 'The base ref name to filter the pull requests by.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for pull requests returned from the connection.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'IssueOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository associated with this label.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'IssueConnection', 'description': 'The connection type for Issue.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'IssueEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'IssueOrder', 'description': 'Ways in which lists of issues can be ordered upon return.', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field in which to order issues by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'IssueOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The direction in which to order issues by the specified field.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'IssueOrderField', 'description': 'Properties by which issue connections can be ordered.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'CREATED_AT', 'description': 'Order issues by creation time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UPDATED_AT', 'description': 'Order issues by update time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'COMMENTS', 'description': 'Order issues by comment count', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'OrderDirection', 'description': 'Possible directions in which to order a list of items when provided an `orderBy` argument.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'ASC', 'description': 'Specifies an ascending order for a given `orderBy` argument.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'DESC', 'description': 'Specifies a descending order for a given `orderBy` argument.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'IssueState', 'description': 'The possible states of an issue.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'OPEN', 'description': 'An issue that is still open', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'CLOSED', 'description': 'An issue that has been closed', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestConnection', 'description': 'The connection type for PullRequest.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'description': 'A repository pull request.', 'fields': [{'name': 'additions', 'description': 'The number of additions in this pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'assignees', 'description': 'A list of Users assigned to this object.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'author', 'description': 'The actor who authored the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'authorAssociation', 'description': "Author's association with the subject of the comment.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentAuthorAssociation', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'baseRef', 'description': 'Identifies the base Ref associated with the pull request.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'baseRefName', 'description': 'Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'body', 'description': 'Identifies the body of the pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyHTML', 'description': 'Identifies the body of the pull request rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyText', 'description': 'Identifies the body of the pull request rendered to text.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'changedFiles', 'description': 'The number of changed files in this pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'closed', 'description': '`true` if the pull request is closed', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'closedAt', 'description': 'Identifies the date and time when the object was closed.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'comments', 'description': 'A list of comments associated with the pull request.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commits', 'description': "A list of commits present in this pull request's head branch not present in the base branch.", 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestCommitConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdViaEmail', 'description': 'Check if this comment was created via an email reply.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'deletions', 'description': 'The number of deletions in this pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'editor', 'description': "The actor who edited this pull request's body.", 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'headRef', 'description': 'Identifies the head Ref associated with the pull request.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'headRefName', 'description': 'Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'headRepository', 'description': "The repository associated with this pull request's head Ref.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'headRepositoryOwner', 'description': "The owner of the repository associated with this pull request's head Ref.", 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'RepositoryOwner', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isCrossRepository', 'description': 'The head and base repositories are different.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'labels', 'description': 'A list of labels associated with the object.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'LabelConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lastEditedAt', 'description': 'The moment the editor made the last edit', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'locked', 'description': '`true` if the pull request is locked', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'mergeCommit', 'description': 'The commit that was created when this pull request was merged.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'mergeable', 'description': 'Whether or not the pull request can be merged based on the existence of merge conflicts.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'MergeableState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'merged', 'description': 'Whether or not the pull request was merged.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'mergedAt', 'description': 'The date and time that the pull request was merged.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'milestone', 'description': 'Identifies the milestone associated with the pull request.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Milestone', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'number', 'description': 'Identifies the pull request number.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'participants', 'description': 'A list of Users that are participating in the Pull Request conversation.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'potentialMergeCommit', 'description': 'The commit that GitHub automatically generated to test if this pull request could be merged. This field will not return a value if the pull request is merged, or if the test merge commit is still being generated. See the `mergeable` field for more details on the mergeability of the pull request.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectCards', 'description': 'List of project cards associated with this pull request.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectCardConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'publishedAt', 'description': 'Identifies when the comment was published at.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactionGroups', 'description': 'A list of reactions grouped by content left on the subject.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionGroup', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactions', 'description': 'A list of Reactions left on the Issue.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'content', 'description': 'Allows filtering Reactions by emoji.', 'type': {'kind': 'ENUM', 'name': 'ReactionContent', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Allows specifying the order in which reactions are returned.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'ReactionOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository associated with this node.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'revertResourcePath', 'description': 'The HTTP path for reverting this pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'revertUrl', 'description': 'The HTTP URL for reverting this pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reviewRequests', 'description': 'A list of review requests associated with the pull request.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'ReviewRequestConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reviews', 'description': 'A list of reviews associated with the pull request.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the reviews.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'PullRequestReviewState', 'ofType': None}}}, 'defaultValue': None}, {'name': 'author', 'description': 'Filter by author of the review.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'PullRequestReviewConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'Identifies the state of the pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'PullRequestState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'suggestedReviewers', 'description': 'A list of reviewer suggestions based on commit history and past review comments.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'SuggestedReviewer', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'timeline', 'description': 'A list of events, comments, commits, etc. associated with the pull request.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'since', 'description': 'Allows filtering timeline events by a `since` timestamp.', 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestTimelineConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'title', 'description': 'Identifies the pull request title.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanReact', 'description': 'Can user react to this subject', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanSubscribe', 'description': 'Check if the viewer is able to change their subscription status for the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanUpdate', 'description': 'Check if the current viewer can update this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCannotUpdateReasons', 'description': 'Reasons why the current viewer can not update this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentCannotUpdateReason', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerDidAuthor', 'description': 'Did the viewer author this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerSubscription', 'description': 'Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'SubscriptionState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Assignable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Closable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Comment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Updatable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UpdatableComment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Labelable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Lockable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Reactable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'RepositoryNode', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Subscribable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'Lockable', 'description': 'An object that can be locked.', 'fields': [{'name': 'locked', 'description': '`true` if the object is locked', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}]}, {'kind': 'INTERFACE', 'name': 'Reactable', 'description': 'Represents a subject that can be reacted on.', 'fields': [{'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactionGroups', 'description': 'A list of reactions grouped by content left on the subject.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionGroup', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactions', 'description': 'A list of Reactions left on the Issue.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'content', 'description': 'Allows filtering Reactions by emoji.', 'type': {'kind': 'ENUM', 'name': 'ReactionContent', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Allows specifying the order in which reactions are returned.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'ReactionOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanReact', 'description': 'Can user react to this subject', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'CommitComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'ReactionGroup', 'description': 'A group of emoji reactions to a particular piece of content.', 'fields': [{'name': 'content', 'description': 'Identifies the emoji reaction.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ReactionContent', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies when the reaction was created.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subject', 'description': 'The subject that was reacted to.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Reactable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'users', 'description': 'Users who have reacted to the reaction subject with the emotion represented by this reaction group', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactingUserConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerHasReacted', 'description': 'Whether or not the authenticated user has left a reaction on the subject.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'ReactionContent', 'description': 'Emojis that can be attached to Issues, Pull Requests and Comments.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'THUMBS_UP', 'description': 'Represents the 👍 emoji.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'THUMBS_DOWN', 'description': 'Represents the 👎 emoji.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'LAUGH', 'description': 'Represents the 😄 emoji.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'HOORAY', 'description': 'Represents the 🎉 emoji.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'CONFUSED', 'description': 'Represents the 😕 emoji.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'HEART', 'description': 'Represents the ❤️ emoji.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReactingUserConnection', 'description': 'The connection type for User.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactingUserEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReactingUserEdge', 'description': "Represents a user that's made a reaction.", 'fields': [{'name': 'cursor', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactedAt', 'description': 'The moment when the user made the reaction.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReactionConnection', 'description': 'A list of reactions that have been left on the subject.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Reaction', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerHasReacted', 'description': 'Whether or not the authenticated user has left a reaction on the subject.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReactionEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Reaction', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Reaction', 'description': 'An emoji reaction to a particular piece of content.', 'fields': [{'name': 'content', 'description': 'Identifies the emoji reaction.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ReactionContent', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactable', 'description': 'The reactable piece of content', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Reactable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'user', 'description': 'Identifies the user who created this reaction.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'ReactionOrder', 'description': 'Ways in which lists of reactions can be ordered upon return.', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field in which to order reactions by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ReactionOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The direction in which to order reactions by the specified field.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'ReactionOrderField', 'description': 'A list of fields that reactions can be ordered by.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'CREATED_AT', 'description': 'Allows ordering a list of reactions by when they were created.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'RepositoryNode', 'description': 'Represents a object that belongs to a repository.', 'fields': [{'name': 'repository', 'description': 'The repository associated with this node.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'CommitComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'CommitCommentThread', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}]}, {'kind': 'INTERFACE', 'name': 'Subscribable', 'description': 'Entities that can be subscribed to for web and email notifications.', 'fields': [{'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanSubscribe', 'description': 'Check if the viewer is able to change their subscription status for the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerSubscription', 'description': 'Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'SubscriptionState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Team', 'ofType': None}]}, {'kind': 'ENUM', 'name': 'SubscriptionState', 'description': 'The possible states of a subscription.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'UNSUBSCRIBED', 'description': 'The User is only notified when particpating or @mentioned.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'SUBSCRIBED', 'description': 'The User is notified of all conversations.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'IGNORED', 'description': 'The User is never notified.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UNAVAILABLE', 'description': 'Subscriptions are currently unavailable', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Ref', 'description': 'Represents a Git reference.', 'fields': [{'name': 'associatedPullRequests', 'description': 'A list of pull requests with this ref as the head ref.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'PullRequestState', 'ofType': None}}}, 'defaultValue': None}, {'name': 'labels', 'description': 'A list of label names to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}, {'name': 'headRefName', 'description': 'The head ref name to filter the pull requests by.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'baseRefName', 'description': 'The base ref name to filter the pull requests by.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for pull requests returned from the connection.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'IssueOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The ref name.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'prefix', 'description': "The ref's prefix, such as `refs/heads/` or `refs/tags/`.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository the ref belongs to.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'target', 'description': 'The object the ref points to.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'GitObject', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'GitObject', 'description': 'Represents a Git object.', 'fields': [{'name': 'abbreviatedOid', 'description': 'An abbreviated version of the Git object ID', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitResourcePath', 'description': 'The HTTP path for this Git object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitUrl', 'description': 'The HTTP URL for this Git object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'oid', 'description': 'The Git object ID', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'GitObjectID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The Repository the Git object belongs to', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Blob', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Tag', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Tree', 'ofType': None}]}, {'kind': 'SCALAR', 'name': 'GitObjectID', 'description': 'A Git object ID.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Commit', 'description': 'Represents a Git commit.', 'fields': [{'name': 'abbreviatedOid', 'description': 'An abbreviated version of the Git object ID', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'additions', 'description': 'The number of additions in this commit.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'author', 'description': 'Authorship details of the commit.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'GitActor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'authoredByCommitter', 'description': 'Check if the committer and the author match.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'authoredDate', 'description': 'The datetime when this commit was authored.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'blame', 'description': 'Fetches `git blame` information.', 'args': [{'name': 'path', 'description': 'The file whose Git blame information you want.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Blame', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'changedFiles', 'description': 'The number of changed files in this commit.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'comments', 'description': 'Comments made on the commit.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CommitCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitResourcePath', 'description': 'The HTTP path for this Git object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitUrl', 'description': 'The HTTP URL for this Git object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'committedDate', 'description': 'The datetime when this commit was committed.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'committedViaWeb', 'description': 'Check if commited via GitHub web UI.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'committer', 'description': 'Committership details of the commit.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'GitActor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deletions', 'description': 'The number of deletions in this commit.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'history', 'description': 'The linear commit history starting from (and including) this commit, in the same order as `git log`.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'path', 'description': 'If non-null, filters history to only show commits touching files under this path.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'author', 'description': 'If non-null, filters history to only show commits with matching authorship.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'CommitAuthor', 'ofType': None}, 'defaultValue': None}, {'name': 'since', 'description': 'Allows specifying a beginning time or date for fetching commits.', 'type': {'kind': 'SCALAR', 'name': 'GitTimestamp', 'ofType': None}, 'defaultValue': None}, {'name': 'until', 'description': 'Allows specifying an ending time or date for fetching commits.', 'type': {'kind': 'SCALAR', 'name': 'GitTimestamp', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CommitHistoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'message', 'description': 'The Git commit message', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'messageBody', 'description': 'The Git commit message body', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'messageBodyHTML', 'description': 'The commit message body rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'messageHeadline', 'description': 'The Git commit message headline', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'messageHeadlineHTML', 'description': 'The commit message headline rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'oid', 'description': 'The Git object ID', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'GitObjectID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'parents', 'description': 'The parents of a commit.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CommitConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pushedDate', 'description': 'The datetime when this commit was pushed.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The Repository this commit belongs to', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this commit', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'signature', 'description': 'Commit signing information, if present.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'GitSignature', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'status', 'description': 'Status information for this commit', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Status', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'tarballUrl', 'description': 'Returns a URL to download a tarball archive for a repository.                      Note: For private repositories, these links are temporary and expire after five minutes.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'tree', 'description': "Commit's root Tree", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Tree', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'treeResourcePath', 'description': 'The HTTP path for the tree of this commit', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'treeUrl', 'description': 'The HTTP URL for the tree of this commit', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for this commit', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanSubscribe', 'description': 'Check if the viewer is able to change their subscription status for the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerSubscription', 'description': 'Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'SubscriptionState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'zipballUrl', 'description': 'Returns a URL to download a zipball archive for a repository.                      Note: For private repositories, these links are temporary and expire after five minutes.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'GitObject', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Subscribable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Tree', 'description': 'Represents a Git tree.', 'fields': [{'name': 'abbreviatedOid', 'description': 'An abbreviated version of the Git object ID', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitResourcePath', 'description': 'The HTTP path for this Git object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitUrl', 'description': 'The HTTP URL for this Git object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'entries', 'description': 'A list of tree entries.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TreeEntry', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'oid', 'description': 'The Git object ID', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'GitObjectID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The Repository the Git object belongs to', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'GitObject', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'TreeEntry', 'description': 'Represents a Git tree entry.', 'fields': [{'name': 'mode', 'description': 'Entry file mode.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'Entry file name.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'object', 'description': 'Entry file object.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'GitObject', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'oid', 'description': 'Entry file Git object ID.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'GitObjectID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The Repository the tree entry belongs to', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'type', 'description': 'Entry file type.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'GitActor', 'description': 'Represents an actor in a Git commit (ie. an author or committer).', 'fields': [{'name': 'avatarUrl', 'description': "A URL pointing to the author's public avatar.", 'args': [{'name': 'size', 'description': 'The size of the resulting square image.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'date', 'description': 'The timestamp of the Git action (authoring or committing).', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'GitTimestamp', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'email', 'description': 'The email in the Git commit.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The name in the Git commit.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'user', 'description': 'The GitHub user corresponding to the email field. Null if no such user exists.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'SCALAR', 'name': 'GitTimestamp', 'description': 'An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'CommitConnection', 'description': 'The connection type for Commit.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CommitEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'CommitEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'CommitHistoryConnection', 'description': 'The connection type for Commit.', 'fields': [{'name': 'edges', 'description': None, 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CommitEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'CommitAuthor', 'description': 'Specifies an author for filtering Git commits.', 'fields': None, 'inputFields': [{'name': 'id', 'description': 'ID of a User to filter by. If non-null, only commits authored by this user will be returned. This field takes precedence over emails.', 'type': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}, 'defaultValue': None}, {'name': 'emails', 'description': 'Email addresses to filter by. Commits authored by any of the specified email addresses will be returned.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'CommitCommentConnection', 'description': 'The connection type for CommitComment.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CommitCommentEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CommitComment', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'CommitCommentEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'CommitComment', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'CommitComment', 'description': 'Represents a comment on a given Commit.', 'fields': [{'name': 'author', 'description': 'The actor who authored the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'authorAssociation', 'description': "Author's association with the subject of the comment.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentAuthorAssociation', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'body', 'description': 'Identifies the comment body.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyHTML', 'description': 'Identifies the comment body rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commit', 'description': 'Identifies the commit associated with the comment, if the commit exists.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdViaEmail', 'description': 'Check if this comment was created via an email reply.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'editor', 'description': 'The actor who edited the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lastEditedAt', 'description': 'The moment the editor made the last edit', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'path', 'description': 'Identifies the file path associated with the comment.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'position', 'description': 'Identifies the line position associated with the comment.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'publishedAt', 'description': 'Identifies when the comment was published at.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactionGroups', 'description': 'A list of reactions grouped by content left on the subject.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionGroup', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactions', 'description': 'A list of Reactions left on the Issue.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'content', 'description': 'Allows filtering Reactions by emoji.', 'type': {'kind': 'ENUM', 'name': 'ReactionContent', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Allows specifying the order in which reactions are returned.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'ReactionOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository associated with this node.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path permalink for this commit comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL permalink for this commit comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanDelete', 'description': 'Check if the current viewer can delete this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanReact', 'description': 'Can user react to this subject', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanUpdate', 'description': 'Check if the current viewer can update this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCannotUpdateReasons', 'description': 'Reasons why the current viewer can not update this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentCannotUpdateReason', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerDidAuthor', 'description': 'Did the viewer author this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Comment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Deletable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Updatable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UpdatableComment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Reactable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'RepositoryNode', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'Deletable', 'description': 'Entities that can be deleted.', 'fields': [{'name': 'viewerCanDelete', 'description': 'Check if the current viewer can delete this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'CommitComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'GistComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}]}, {'kind': 'INTERFACE', 'name': 'GitSignature', 'description': 'Information about a signature (GPG or S/MIME) on a Commit or Tag.', 'fields': [{'name': 'email', 'description': 'Email used to sign this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isValid', 'description': 'True if the signature is valid and verified by GitHub.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'payload', 'description': 'Payload for GPG signing object. Raw ODB object without the signature header.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'signature', 'description': 'ASCII-armored signature header from object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'signer', 'description': 'GitHub user corresponding to the email signing this commit.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'GitSignatureState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'GpgSignature', 'ofType': None}, {'kind': 'OBJECT', 'name': 'SmimeSignature', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnknownSignature', 'ofType': None}]}, {'kind': 'ENUM', 'name': 'GitSignatureState', 'description': 'The state of a Git signature.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'VALID', 'description': 'Valid signature and verified by GitHub.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'INVALID', 'description': 'Invalid signature.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'MALFORMED_SIG', 'description': 'Malformed signature.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UNKNOWN_KEY', 'description': 'Key used for signing not known to GitHub.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'BAD_EMAIL', 'description': 'Invalid email used for signing.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UNVERIFIED_EMAIL', 'description': 'Email used for signing unverified on GitHub.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'NO_USER', 'description': 'Email used for signing not known to GitHub.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UNKNOWN_SIG_TYPE', 'description': 'Unknown signature type.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UNSIGNED', 'description': 'Unsigned.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'GPGVERIFY_UNAVAILABLE', 'description': 'Internal error - the GPG verification service is unavailable at the moment.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'GPGVERIFY_ERROR', 'description': 'Internal error - the GPG verification service misbehaved.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'NOT_SIGNING_KEY', 'description': "The usage flags for the key that signed this don't allow signing.", 'isDeprecated': False, 'deprecationReason': None}, {'name': 'EXPIRED_KEY', 'description': 'Signing key expired.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Status', 'description': 'Represents a commit status.', 'fields': [{'name': 'commit', 'description': 'The commit this status is attached to.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'context', 'description': 'Looks up an individual status context by context name.', 'args': [{'name': 'name', 'description': 'The context name.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'StatusContext', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'contexts', 'description': 'The individual status contexts for this commit.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'StatusContext', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'The combined commit status.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'StatusState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'StatusState', 'description': 'The possible commit status states.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'EXPECTED', 'description': 'Status is expected.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ERROR', 'description': 'Status is errored.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'FAILURE', 'description': 'Status is failing.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'PENDING', 'description': 'Status is pending.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'SUCCESS', 'description': 'Status is successful.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'StatusContext', 'description': 'Represents an individual commit status context', 'fields': [{'name': 'commit', 'description': 'This commit this status context is attached to.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'context', 'description': 'The name of this status context.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'creator', 'description': 'The actor who created this status context.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': 'The description for this status context.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'The state of this status context.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'StatusState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'targetUrl', 'description': 'The URL for this status context.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Blame', 'description': 'Represents a Git blame.', 'fields': [{'name': 'ranges', 'description': 'The list of ranges from a Git blame.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'BlameRange', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'BlameRange', 'description': 'Represents a range of information from a Git blame.', 'fields': [{'name': 'age', 'description': "Identifies the recency of the change, from 1 (new) to 10 (old). This is calculated as a 2-quantile and determines the length of distance between the median age of all the changes in the file and the recency of the current range's change.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commit', 'description': 'Identifies the line author', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'endingLine', 'description': 'The ending line for the range', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'startingLine', 'description': 'The starting line for the range', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Blob', 'description': 'Represents a Git blob.', 'fields': [{'name': 'abbreviatedOid', 'description': 'An abbreviated version of the Git object ID', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'byteSize', 'description': 'Byte size of Blob object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitResourcePath', 'description': 'The HTTP path for this Git object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitUrl', 'description': 'The HTTP URL for this Git object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isBinary', 'description': 'Indicates whether the Blob is binary or text', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isTruncated', 'description': 'Indicates whether the contents is truncated', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'oid', 'description': 'The Git object ID', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'GitObjectID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The Repository the Git object belongs to', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'text', 'description': 'UTF8 text data or null if the Blob is binary', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'GitObject', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Language', 'description': 'Represents a given language found in repositories.', 'fields': [{'name': 'color', 'description': 'The color defined for the current language.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The name of the current language.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'PullRequestState', 'description': 'The possible states of a pull request.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'OPEN', 'description': 'A pull request that is still open.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'CLOSED', 'description': 'A pull request that has been closed without being merged.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'MERGED', 'description': 'A pull request that has been closed by being merged.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'RepositoryOwner', 'description': 'Represents an owner of a Repository.', 'fields': [{'name': 'avatarUrl', 'description': "A URL pointing to the owner's public avatar.", 'args': [{'name': 'size', 'description': 'The size of the resulting square image.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'login', 'description': 'The username used to login.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pinnedRepositories', 'description': 'A list of repositories this user has pinned to their profile', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters repositories according to privacy', 'type': {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for repositories returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'affiliations', 'description': 'Affiliation options for repositories returned from the connection', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryAffiliation', 'ofType': None}}, 'defaultValue': None}, {'name': 'isLocked', 'description': 'If non-null, filters repositories according to whether they have been locked', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repositories', 'description': 'A list of repositories that the user owns.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters repositories according to privacy', 'type': {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for repositories returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'affiliations', 'description': 'Affiliation options for repositories returned from the connection', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryAffiliation', 'ofType': None}}, 'defaultValue': None}, {'name': 'isLocked', 'description': 'If non-null, filters repositories according to whether they have been locked', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}, {'name': 'isFork', 'description': 'If non-null, filters repositories according to whether they are forks of another repository', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'Find Repository.', 'args': [{'name': 'name', 'description': 'Name of Repository to find.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP URL for the owner.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for the owner.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}, {'kind': 'OBJECT', 'name': 'User', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'description': 'A list of repositories owned by the subject.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalDiskUsage', 'description': 'The total size in kilobytes of all repositories in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RepositoryEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'description': 'The privacy of a repository', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'PUBLIC', 'description': 'Public', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'PRIVATE', 'description': 'Private', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'description': 'Ordering options for repository connections', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field to order repositories by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The ordering direction.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'RepositoryOrderField', 'description': 'Properties by which repository connections can be ordered.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'CREATED_AT', 'description': 'Order repositories by creation time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UPDATED_AT', 'description': 'Order repositories by update time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'PUSHED_AT', 'description': 'Order repositories by push time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'NAME', 'description': 'Order repositories by name', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'STARGAZERS', 'description': 'Order repositories by number of stargazers', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'RepositoryAffiliation', 'description': 'The affiliation of a user to a repository', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'OWNER', 'description': 'Repositories that are owned by the authenticated user.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'COLLABORATOR', 'description': 'Repositories that the user has been added to as a collaborator.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ORGANIZATION_MEMBER', 'description': 'Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Milestone', 'description': 'Represents a Milestone object on a given repository.', 'fields': [{'name': 'closed', 'description': '`true` if the object is closed (definition of closed may depend on type)', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'closedAt', 'description': 'Identifies the date and time when the object was closed.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'creator', 'description': 'Identifies the actor who created the milestone.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': 'Identifies the description of the milestone.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'dueOn', 'description': 'Identifies the due date of the milestone.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'issues', 'description': 'A list of issues associated with the milestone.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'labels', 'description': 'A list of label names to filter the pull requests by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for issues returned from the connection.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'IssueOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the issues by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'IssueState', 'ofType': None}}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'number', 'description': 'Identifies the number of the milestone.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository associated with this milestone.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this milestone', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'Identifies the state of the milestone.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'MilestoneState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'title', 'description': 'Identifies the title of the milestone.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this milestone', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Closable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'MilestoneState', 'description': 'The possible states of a milestone.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'OPEN', 'description': 'A milestone that is still open.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'CLOSED', 'description': 'A milestone that has been closed.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'MergeableState', 'description': 'Whether or not a PullRequest can be merged.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'MERGEABLE', 'description': 'The pull request can be merged.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'CONFLICTING', 'description': 'The pull request cannot be merged due to merge conflicts.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UNKNOWN', 'description': 'The mergeability of the pull request is still being calculated.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'IssueCommentConnection', 'description': 'The connection type for IssueComment.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueCommentEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'IssueCommentEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'IssueComment', 'description': 'Represents a comment on an Issue.', 'fields': [{'name': 'author', 'description': 'The actor who authored the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'authorAssociation', 'description': "Author's association with the subject of the comment.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentAuthorAssociation', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'body', 'description': 'Identifies the comment body.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyHTML', 'description': 'The comment body rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyText', 'description': 'Identifies the body of the issue rendered to text.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdViaEmail', 'description': 'Check if this comment was created via an email reply.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'editor', 'description': 'The actor who edited the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'issue', 'description': 'Identifies the issue associated with the comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lastEditedAt', 'description': 'The moment the editor made the last edit', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'publishedAt', 'description': 'Identifies when the comment was published at.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'Returns the pull request associated with the comment, if this comment was made on a\npull request.\n', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactionGroups', 'description': 'A list of reactions grouped by content left on the subject.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionGroup', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactions', 'description': 'A list of Reactions left on the Issue.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'content', 'description': 'Allows filtering Reactions by emoji.', 'type': {'kind': 'ENUM', 'name': 'ReactionContent', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Allows specifying the order in which reactions are returned.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'ReactionOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository associated with this node.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this issue comment', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this issue comment', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanDelete', 'description': 'Check if the current viewer can delete this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanReact', 'description': 'Can user react to this subject', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanUpdate', 'description': 'Check if the current viewer can update this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCannotUpdateReasons', 'description': 'Reasons why the current viewer can not update this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentCannotUpdateReason', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerDidAuthor', 'description': 'Did the viewer author this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Comment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Deletable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Updatable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UpdatableComment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Reactable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'RepositoryNode', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'IssuePubSubTopic', 'description': 'The possible PubSub channels for an issue.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'UPDATED', 'description': 'The channel ID for observing issue updates.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'MARKASREAD', 'description': 'The channel ID for marking an issue as read.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewConnection', 'description': 'The connection type for PullRequestReview.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReviewEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestReview', 'description': 'A review object for a given pull request.', 'fields': [{'name': 'author', 'description': 'The actor who authored the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'authorAssociation', 'description': "Author's association with the subject of the comment.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentAuthorAssociation', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'body', 'description': 'Identifies the pull request review body.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyHTML', 'description': 'The body of this review rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyText', 'description': 'The body of this review rendered as plain text.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'comments', 'description': 'A list of review comments for the current pull request review.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReviewCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commit', 'description': 'Identifies the commit associated with this pull request review.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdViaEmail', 'description': 'Check if this comment was created via an email reply.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'editor', 'description': 'The actor who edited the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lastEditedAt', 'description': 'The moment the editor made the last edit', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'publishedAt', 'description': 'Identifies when the comment was published at.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'Identifies the pull request associated with this pull request review.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository associated with this node.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path permalink for this PullRequestReview.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'Identifies the current state of the pull request review.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'PullRequestReviewState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'submittedAt', 'description': 'Identifies when the Pull Request Review was submitted', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL permalink for this PullRequestReview.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanDelete', 'description': 'Check if the current viewer can delete this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanUpdate', 'description': 'Check if the current viewer can update this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCannotUpdateReasons', 'description': 'Reasons why the current viewer can not update this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentCannotUpdateReason', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerDidAuthor', 'description': 'Did the viewer author this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Comment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Deletable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Updatable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UpdatableComment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'RepositoryNode', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'PullRequestReviewState', 'description': 'The possible states of a pull request review.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'PENDING', 'description': 'A review that has not yet been submitted.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'COMMENTED', 'description': 'An informational review.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'APPROVED', 'description': 'A review allowing the pull request to merge.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'CHANGES_REQUESTED', 'description': 'A review blocking the pull request from merging.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'DISMISSED', 'description': 'A review that has been dismissed.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewCommentConnection', 'description': 'The connection type for PullRequestReviewComment.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReviewCommentEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewCommentEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'description': 'A review comment associated with a given repository pull request.', 'fields': [{'name': 'author', 'description': 'The actor who authored the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'authorAssociation', 'description': "Author's association with the subject of the comment.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentAuthorAssociation', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'body', 'description': 'The comment body of this review comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyHTML', 'description': 'The comment body of this review comment rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyText', 'description': 'The comment body of this review comment rendered as plain text.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commit', 'description': 'Identifies the commit associated with the comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies when the comment was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdViaEmail', 'description': 'Check if this comment was created via an email reply.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'diffHunk', 'description': 'The diff hunk to which the comment applies.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'draftedAt', 'description': 'Identifies when the comment was created in a draft state.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'editor', 'description': 'The actor who edited the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lastEditedAt', 'description': 'The moment the editor made the last edit', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'originalCommit', 'description': 'Identifies the original commit associated with the comment.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'originalPosition', 'description': 'The original line index in the diff to which the comment applies.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'path', 'description': 'The path to which the comment applies.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'position', 'description': 'The line index in the diff to which the comment applies.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'publishedAt', 'description': 'Identifies when the comment was published at.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'The pull request associated with this review comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequestReview', 'description': 'The pull request review associated with this review comment.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactionGroups', 'description': 'A list of reactions grouped by content left on the subject.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionGroup', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reactions', 'description': 'A list of Reactions left on the Issue.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'content', 'description': 'Allows filtering Reactions by emoji.', 'type': {'kind': 'ENUM', 'name': 'ReactionContent', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Allows specifying the order in which reactions are returned.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'ReactionOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReactionConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'replyTo', 'description': 'The comment this is a reply to.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository associated with this node.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path permalink for this review comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies when the comment was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL permalink for this review comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanDelete', 'description': 'Check if the current viewer can delete this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanReact', 'description': 'Can user react to this subject', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanUpdate', 'description': 'Check if the current viewer can update this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCannotUpdateReasons', 'description': 'Reasons why the current viewer can not update this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentCannotUpdateReason', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerDidAuthor', 'description': 'Did the viewer author this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Comment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Deletable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Updatable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UpdatableComment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Reactable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'RepositoryNode', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'PullRequestPubSubTopic', 'description': 'The possible PubSub channels for a pull request.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'UPDATED', 'description': 'The channel ID for observing pull request updates.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'MARKASREAD', 'description': 'The channel ID for marking an pull request as read.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'HEAD_REF', 'description': 'The channel ID for observing head ref updates.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewThread', 'description': 'A threaded list of comments for a given pull request.', 'fields': [{'name': 'comments', 'description': 'A list of pull request comments associated with the thread.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReviewCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'Identifies the pull request associated with this thread.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'Identifies the repository associated with this thread.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'TeamConnection', 'description': 'The connection type for Team.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TeamEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Team', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'TeamEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Team', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Team', 'description': 'A team of users in an organization.', 'fields': [{'name': 'ancestors', 'description': 'A list of teams that are ancestors of this team.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TeamConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'childTeams', 'description': 'List of child teams belonging to this team', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Order for connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'TeamOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'userLogins', 'description': 'User logins to filter by', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}, {'name': 'immediateOnly', 'description': 'Whether to list immediate child teams or all descendant child teams.', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': 'true'}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TeamConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'combinedSlug', 'description': 'The slug corresponding to the organization and team.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': 'The description of the team.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'editTeamResourcePath', 'description': 'The HTTP path for editing this team', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'editTeamUrl', 'description': 'The HTTP URL for editing this team', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'invitations', 'description': 'A list of pending invitations for users to this team', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'OrganizationInvitationConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'members', 'description': 'A list of users who are members of this team.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'query', 'description': 'The search string to look for.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'membership', 'description': 'Filter by membership type', 'type': {'kind': 'ENUM', 'name': 'TeamMembershipType', 'ofType': None}, 'defaultValue': 'ALL'}, {'name': 'role', 'description': 'Filter by team member role', 'type': {'kind': 'ENUM', 'name': 'TeamMemberRole', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TeamMemberConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'membersResourcePath', 'description': "The HTTP path for the team' members", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'membersUrl', 'description': "The HTTP URL for the team' members", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The name of the team.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'newTeamResourcePath', 'description': 'The HTTP path creating a new team', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'newTeamUrl', 'description': 'The HTTP URL creating a new team', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'organization', 'description': 'The organization that owns this team.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'parentTeam', 'description': 'The parent team of the team.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Team', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'privacy', 'description': 'The level of privacy the team has.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'TeamPrivacy', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repositories', 'description': 'A list of repositories this team has access to.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'query', 'description': 'The search string to look for.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Order for the connection.', 'type': {'kind': 'INPUT_OBJECT', 'name': 'TeamRepositoryOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TeamRepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repositoriesResourcePath', 'description': "The HTTP path for this team's repositories", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repositoriesUrl', 'description': "The HTTP URL for this team's repositories", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this team', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'slug', 'description': 'The slug corresponding to the team.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'teamsResourcePath', 'description': "The HTTP path for this team's teams", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'teamsUrl', 'description': "The HTTP URL for this team's teams", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this team', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanAdminister', 'description': 'Team is adminable by the viewer.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanSubscribe', 'description': 'Check if the viewer is able to change their subscription status for the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerSubscription', 'description': 'Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'SubscriptionState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Subscribable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'TeamPrivacy', 'description': 'The possible team privacy values.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'SECRET', 'description': 'A secret team can only be seen by its members.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'VISIBLE', 'description': 'A visible team can be seen and @mentioned by every member of the organization.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'TeamMemberConnection', 'description': 'The connection type for User.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TeamMemberEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'TeamMemberEdge', 'description': 'Represents a user who is a member of a team.', 'fields': [{'name': 'cursor', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'memberAccessResourcePath', 'description': "The HTTP path to the organization's member access page.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'memberAccessUrl', 'description': "The HTTP URL to the organization's member access page.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'role', 'description': 'The role the member has on the team.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'TeamMemberRole', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'TeamMemberRole', 'description': "The possible team member roles; either 'maintainer' or 'member'.", 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'MAINTAINER', 'description': 'A team maintainer has permission to add and remove team members.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'MEMBER', 'description': 'A team member has no administrative permissions on the team.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'TeamMembershipType', 'description': 'Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'IMMEDIATE', 'description': 'Includes only immediate members of the team.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'CHILD_TEAM', 'description': 'Includes only child team members for the team.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ALL', 'description': 'Includes immediate and child team members for the team.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'TeamRepositoryConnection', 'description': 'The connection type for Repository.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TeamRepositoryEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'TeamRepositoryEdge', 'description': 'Represents a team repository.', 'fields': [{'name': 'cursor', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'permission', 'description': 'The permission level the team has on the repository', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryPermission', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'RepositoryPermission', 'description': 'The access level to a repository', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'ADMIN', 'description': 'Can read, clone, push, and add collaborators', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'WRITE', 'description': 'Can read, clone and push', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'READ', 'description': 'Can read and clone', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'TeamRepositoryOrder', 'description': 'Ordering options for team repository connections', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field to order repositories by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'TeamRepositoryOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The ordering direction.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'TeamRepositoryOrderField', 'description': 'Properties by which team repository connections can be ordered.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'CREATED_AT', 'description': 'Order repositories by creation time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UPDATED_AT', 'description': 'Order repositories by update time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'PUSHED_AT', 'description': 'Order repositories by push time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'NAME', 'description': 'Order repositories by name', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'PERMISSION', 'description': 'Order repositories by permission', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'STARGAZERS', 'description': 'Order repositories by number of stargazers', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProjectConnection', 'description': 'A list of projects associated with the owner.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProjectEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'ProjectOrder', 'description': 'Ways in which lists of projects can be ordered upon return.', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field in which to order projects by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ProjectOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The direction in which to order projects by the specified field.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'ProjectOrderField', 'description': 'Properties by which project connections can be ordered.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'CREATED_AT', 'description': 'Order projects by creation time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UPDATED_AT', 'description': 'Order projects by update time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'NAME', 'description': 'Order projects by name', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'OrganizationInvitationConnection', 'description': 'The connection type for OrganizationInvitation.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'OrganizationInvitationEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'OrganizationInvitation', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'OrganizationInvitationEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'OrganizationInvitation', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'OrganizationInvitation', 'description': 'An Invitation for a user to an organization.', 'fields': [{'name': 'email', 'description': 'The email address of the user invited to the organization.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'invitationType', 'description': 'The type of invitation that was sent (e.g. email, user).', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrganizationInvitationType', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'invitee', 'description': 'The user who was invited to the organization.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'inviter', 'description': 'The user who created the invitation.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'role', 'description': "The user's pending role in the organization (e.g. member, owner).", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrganizationInvitationRole', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'OrganizationInvitationType', 'description': 'The possible organization invitation types.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'USER', 'description': 'The invitation was to an existing user.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'EMAIL', 'description': 'The invitation was to an email address.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'OrganizationInvitationRole', 'description': 'The possible organization invitation roles.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'DIRECT_MEMBER', 'description': 'The user is invited to be a direct member of the organization.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ADMIN', 'description': 'The user is invited to be an admin of the organization.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'BILLING_MANAGER', 'description': 'The user is invited to be a billing manager of the organization.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'REINSTATE', 'description': "The user's previous role will be reinstated.", 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'TeamOrder', 'description': 'Ways in which team connections can be ordered.', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field in which to order nodes by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'TeamOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The direction in which to order nodes.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'TeamOrderField', 'description': 'Properties by which team connections can be ordered.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'NAME', 'description': 'Allows ordering a list of teams by name.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Organization', 'description': 'An account on GitHub, with one or more owners, that has repositories, members and teams.', 'fields': [{'name': 'avatarUrl', 'description': "A URL pointing to the organization's public avatar.", 'args': [{'name': 'size', 'description': 'The size of the resulting square image.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'description', 'description': "The organization's public profile description.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'email', 'description': "The organization's public email.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'location', 'description': "The organization's public profile location.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'login', 'description': "The organization's login name.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'members', 'description': 'A list of users who are members of this organization.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': "The organization's public profile name.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'newTeamResourcePath', 'description': 'The HTTP path creating a new team', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'newTeamUrl', 'description': 'The HTTP URL creating a new team', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'organizationBillingEmail', 'description': 'The billing email for the organization.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pinnedRepositories', 'description': 'A list of repositories this user has pinned to their profile', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters repositories according to privacy', 'type': {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for repositories returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'affiliations', 'description': 'Affiliation options for repositories returned from the connection', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryAffiliation', 'ofType': None}}, 'defaultValue': None}, {'name': 'isLocked', 'description': 'If non-null, filters repositories according to whether they have been locked', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'project', 'description': 'Find project by number.', 'args': [{'name': 'number', 'description': 'The project number to find.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projects', 'description': 'A list of projects under the owner.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for projects returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'ProjectOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'search', 'description': 'Query to search projects by, currently only searching by name.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'states', 'description': 'A list of states to filter the projects by.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ProjectState', 'ofType': None}}}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectsResourcePath', 'description': "The HTTP path listing organization's projects", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectsUrl', 'description': "The HTTP URL listing organization's projects", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repositories', 'description': 'A list of repositories that the user owns.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters repositories according to privacy', 'type': {'kind': 'ENUM', 'name': 'RepositoryPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for repositories returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'RepositoryOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'affiliations', 'description': 'Affiliation options for repositories returned from the connection', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryAffiliation', 'ofType': None}}, 'defaultValue': None}, {'name': 'isLocked', 'description': 'If non-null, filters repositories according to whether they have been locked', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}, {'name': 'isFork', 'description': 'If non-null, filters repositories according to whether they are forks of another repository', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'Find Repository.', 'args': [{'name': 'name', 'description': 'Name of Repository to find.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this user', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'samlIdentityProvider', 'description': "The Organization's SAML Identity Providers", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'OrganizationIdentityProvider', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'team', 'description': "Find an organization's team by its slug.", 'args': [{'name': 'slug', 'description': 'The name or slug of the team to find.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'Team', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'teams', 'description': 'A list of teams in this organization.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'privacy', 'description': 'If non-null, filters teams according to privacy', 'type': {'kind': 'ENUM', 'name': 'TeamPrivacy', 'ofType': None}, 'defaultValue': None}, {'name': 'role', 'description': 'If non-null, filters teams according to whether the viewer is an admin or member on team', 'type': {'kind': 'ENUM', 'name': 'TeamRole', 'ofType': None}, 'defaultValue': None}, {'name': 'query', 'description': 'If non-null, filters teams with query on team name and team slug', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'userLogins', 'description': 'User logins to filter by', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Ordering options for teams returned from the connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'TeamOrder', 'ofType': None}, 'defaultValue': None}, {'name': 'ldapMapped', 'description': 'If true, filters teams that are mapped to an LDAP Group (Enterprise only)', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}, {'name': 'rootTeamsOnly', 'description': 'If true, restrict to only root teams', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': 'false'}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TeamConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'teamsResourcePath', 'description': "The HTTP path listing organization's teams", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'teamsUrl', 'description': "The HTTP URL listing organization's teams", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for this user', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanAdminister', 'description': 'Organization is adminable by the viewer.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanCreateProjects', 'description': 'Can the current viewer create new projects on this owner.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanCreateRepositories', 'description': 'Viewer can create repositories on this organization', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanCreateTeams', 'description': 'Viewer can create teams on this organization.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerIsAMember', 'description': 'Viewer is an active member of this organization.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'websiteUrl', 'description': "The organization's public profile URL.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'ProjectOwner', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'RepositoryOwner', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'MarketplaceListing', 'description': 'A listing in the GitHub integration marketplace.', 'fields': [{'name': 'companyUrl', 'description': "URL to the listing owner's company site.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'configurationResourcePath', 'description': "The HTTP path for configuring access to the listing's integration or OAuth app", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'configurationUrl', 'description': "The HTTP URL for configuring access to the listing's integration or OAuth app", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'documentationUrl', 'description': "URL to the listing's documentation.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'extendedDescription', 'description': "The listing's detailed description.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'extendedDescriptionHTML', 'description': "The listing's detailed description rendered to HTML.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'fullDescription', 'description': "The listing's introductory description.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'fullDescriptionHTML', 'description': "The listing's introductory description rendered to HTML.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasApprovalBeenRequested', 'description': 'Whether this listing has been submitted for review from GitHub for approval to be displayed in the Marketplace.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasPublishedFreeTrialPlans', 'description': 'Does this listing have any plans with a free trial?', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasTermsOfService', 'description': 'Does this listing have a terms of service link?', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'howItWorks', 'description': 'A technical description of how this app works with GitHub.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'howItWorksHTML', 'description': "The listing's technical description rendered to HTML.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'installationUrl', 'description': "URL to install the product to the viewer's account or organization.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'installedForViewer', 'description': "Whether this listing's app has been installed for the current viewer", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isApproved', 'description': 'Whether this listing has been approved for display in the Marketplace.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isDelisted', 'description': 'Whether this listing has been removed from the Marketplace.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isDraft', 'description': 'Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isPaid', 'description': 'Whether the product this listing represents is available as part of a paid plan.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isRejected', 'description': 'Whether this listing has been rejected by GitHub for display in the Marketplace.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'logoBackgroundColor', 'description': "The hex color code, without the leading '#', for the logo background.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'logoUrl', 'description': "URL for the listing's logo image.", 'args': [{'name': 'size', 'description': 'The size in pixels of the resulting square image.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': '400'}], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': "The listing's full name.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'normalizedShortDescription', 'description': "The listing's very short description without a trailing period or ampersands.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pricingUrl', 'description': "URL to the listing's detailed pricing.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'primaryCategory', 'description': 'The category that best describes the listing.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'MarketplaceCategory', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'privacyPolicyUrl', 'description': "URL to the listing's privacy policy.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for the Marketplace listing.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'screenshotUrls', 'description': "The URLs for the listing's screenshots.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'secondaryCategory', 'description': 'An alternate category that describes the listing.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'MarketplaceCategory', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'shortDescription', 'description': "The listing's very short description.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'slug', 'description': 'The short name of the listing used in its URL.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'statusUrl', 'description': "URL to the listing's status page.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'supportEmail', 'description': "An email address for support for this listing's app.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'supportUrl', 'description': "Either a URL or an email address for support for this listing's app.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'termsOfServiceUrl', 'description': "URL to the listing's terms of service.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for the Marketplace listing.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanAddPlans', 'description': 'Can the current viewer add plans for this Marketplace listing.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanApprove', 'description': 'Can the current viewer approve this Marketplace listing.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanDelist', 'description': 'Can the current viewer delist this Marketplace listing.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanEdit', 'description': 'Can the current viewer edit this Marketplace listing.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanEditCategories', 'description': 'Can the current viewer edit the primary and secondary category of this\nMarketplace listing.\n', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanEditPlans', 'description': 'Can the current viewer edit the plans for this Marketplace listing.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanRedraft', 'description': 'Can the current viewer return this Marketplace listing to draft state\nso it becomes editable again.\n', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanReject', 'description': 'Can the current viewer reject this Marketplace listing by returning it to\nan editable draft state or rejecting it entirely.\n', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanRequestApproval', 'description': 'Can the current viewer request this listing be reviewed for display in\nthe Marketplace.\n', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerHasPurchased', 'description': 'Indicates whether the current user has an active subscription to this Marketplace listing.\n', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerHasPurchasedForAllOrganizations', 'description': 'Indicates if the current user has purchased a subscription to this Marketplace listing\nfor all of the organizations the user owns.\n', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerIsListingAdmin', 'description': 'Does the current viewer role allow them to administer this Marketplace listing.\n', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'OrganizationConnection', 'description': 'The connection type for Organization.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'OrganizationEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'OrganizationEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Bot', 'description': 'A special type of user which takes actions on behalf of GitHub Apps.', 'fields': [{'name': 'avatarUrl', 'description': "A URL pointing to the GitHub App's public avatar.", 'args': [{'name': 'size', 'description': 'The size of the resulting square image.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'login', 'description': 'The username of the actor.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this bot', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this bot', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'SCALAR', 'name': 'Float', 'description': 'Represents signed double-precision fractional values as specified by [IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'MarketplaceCategory', 'description': 'A public description of a Marketplace category.', 'fields': [{'name': 'description', 'description': "The category's description.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'howItWorks', 'description': 'The technical description of how apps listed in this category work with GitHub.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': "The category's name.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'primaryListingCount', 'description': 'How many Marketplace listings have this as their primary category.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this Marketplace category.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'secondaryListingCount', 'description': 'How many Marketplace listings have this as their secondary category.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'slug', 'description': 'The short name of the category used in its URL.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for this Marketplace category.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'LanguageConnection', 'description': 'A list of languages associated with the parent.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'LanguageEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Language', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalSize', 'description': 'The total size in bytes of files written in that language.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'LanguageEdge', 'description': 'Represents the language of a repository.', 'fields': [{'name': 'cursor', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Language', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'size', 'description': 'The number of bytes of code written in the language.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'SCALAR', 'name': 'X509Certificate', 'description': 'A valid x509 certificate string', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'OrganizationIdentityProvider', 'description': 'An Identity Provider configured to provision SAML and SCIM identities for Organizations', 'fields': [{'name': 'digestMethod', 'description': 'The digest algorithm used to sign SAML requests for the Identity Provider.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'externalIdentities', 'description': 'External Identities provisioned by this Identity Provider', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ExternalIdentityConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'idpCertificate', 'description': 'The x509 certificate used by the Identity Provder to sign assertions and responses.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'X509Certificate', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'issuer', 'description': 'The Issuer Entity ID for the SAML Identity Provider', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'organization', 'description': 'Organization this Identity Provider belongs to', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'signatureMethod', 'description': 'The signature algorithm used to sign SAML requests for the Identity Provider.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ssoUrl', 'description': "The URL endpoint for the Identity Provider's SAML SSO.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ExternalIdentityConnection', 'description': 'The connection type for ExternalIdentity.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ExternalIdentityEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ExternalIdentity', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ExternalIdentityEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'ExternalIdentity', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ExternalIdentity', 'description': 'An external identity provisioned by SAML SSO or SCIM.', 'fields': [{'name': 'guid', 'description': 'The GUID for this identity', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'organizationInvitation', 'description': 'Organization invitation for this SCIM-provisioned external identity', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'OrganizationInvitation', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'samlIdentity', 'description': 'SAML Identity attributes', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'ExternalIdentitySamlAttributes', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'scimIdentity', 'description': 'SCIM Identity attributes', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'ExternalIdentityScimAttributes', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'user', 'description': 'User linked to this external identity', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ExternalIdentitySamlAttributes', 'description': 'SAML attributes for the External Identity', 'fields': [{'name': 'nameId', 'description': 'The NameID of the SAML identity', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ExternalIdentityScimAttributes', 'description': 'SCIM attributes for the External Identity', 'fields': [{'name': 'username', 'description': 'The userName of the SCIM identity', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'DefaultRepositoryPermissionField', 'description': 'The possible default permissions for organization-owned repositories.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'READ', 'description': 'Members have read access to org repos by default', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'WRITE', 'description': 'Members have read and write access to org repos by default', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ADMIN', 'description': 'Members have read, write, and admin access to org repos by default', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'TeamRole', 'description': 'The role of a user on a team.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'ADMIN', 'description': 'User has admin rights on the team.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'MEMBER', 'description': 'User is a member of the team.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'GistConnection', 'description': 'The connection type for Gist.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'GistEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Gist', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'GistEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Gist', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Gist', 'description': 'A Gist.', 'fields': [{'name': 'comments', 'description': 'A list of comments associated with the gist', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'GistCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': 'The gist description.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isPublic', 'description': 'Whether the gist is public or not.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The gist name.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'owner', 'description': 'The gist owner.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'RepositoryOwner', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pushedAt', 'description': 'Identifies when the gist was last pushed to.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'stargazers', 'description': 'A list of users who have starred this starrable.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Order for connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'StarOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'StargazerConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'viewerHasStarred', 'description': 'Returns a boolean indicating whether the viewing user has starred this starrable.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Starrable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INTERFACE', 'name': 'Starrable', 'description': 'Things that can be starred.', 'fields': [{'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'stargazers', 'description': 'A list of users who have starred this starrable.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'orderBy', 'description': 'Order for connection', 'type': {'kind': 'INPUT_OBJECT', 'name': 'StarOrder', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'StargazerConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerHasStarred', 'description': 'Returns a boolean indicating whether the viewing user has starred this starrable.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Gist', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'StargazerConnection', 'description': 'The connection type for User.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'StargazerEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'StargazerEdge', 'description': "Represents a user that's starred a repository.", 'fields': [{'name': 'cursor', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'starredAt', 'description': 'Identifies when the item was starred.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'StarOrder', 'description': 'Ways in which star connections can be ordered.', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field in which to order nodes by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'StarOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The direction in which to order nodes.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'StarOrderField', 'description': 'Properties by which star connections can be ordered.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'STARRED_AT', 'description': 'Allows ordering a list of stars by when they were created.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'GistCommentConnection', 'description': 'The connection type for GistComment.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'GistCommentEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'GistComment', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'GistCommentEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'GistComment', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'GistComment', 'description': 'Represents a comment on an Gist.', 'fields': [{'name': 'author', 'description': 'The actor who authored the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'authorAssociation', 'description': "Author's association with the gist.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentAuthorAssociation', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'body', 'description': 'Identifies the comment body.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'bodyHTML', 'description': 'The comment body rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdViaEmail', 'description': 'Check if this comment was created via an email reply.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'editor', 'description': 'The actor who edited the comment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'gist', 'description': 'The associated gist.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Gist', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lastEditedAt', 'description': 'The moment the editor made the last edit', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'publishedAt', 'description': 'Identifies when the comment was published at.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'viewerCanDelete', 'description': 'Check if the current viewer can delete this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCanUpdate', 'description': 'Check if the current viewer can update this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerCannotUpdateReasons', 'description': 'Reasons why the current viewer can not update this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'CommentCannotUpdateReason', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'viewerDidAuthor', 'description': 'Did the viewer author this comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Comment', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Deletable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'Updatable', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UpdatableComment', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'GistPrivacy', 'description': 'The privacy of a Gist', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'PUBLIC', 'description': 'Public', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'SECRET', 'description': 'Secret', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ALL', 'description': 'Gists that are public and secret', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'GistOrder', 'description': 'Ordering options for gist connections', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field to order repositories by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'GistOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The ordering direction.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'GistOrderField', 'description': 'Properties by which gist connections can be ordered.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'CREATED_AT', 'description': 'Order gists by creation time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UPDATED_AT', 'description': 'Order gists by update time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'PUSHED_AT', 'description': 'Order gists by push time', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestCommitConnection', 'description': 'The connection type for PullRequestCommit.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestCommitEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestCommit', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestCommitEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PullRequestCommit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestCommit', 'description': 'Represents a Git commit part of a pull request.', 'fields': [{'name': 'commit', 'description': 'The Git commit object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'The pull request this commit belongs to', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this pull request commit', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for this pull request commit', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReviewRequestConnection', 'description': 'The connection type for ReviewRequest.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReviewRequestEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReviewRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReviewRequestEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'ReviewRequest', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReviewRequest', 'description': 'A request for a user to review a pull request.', 'fields': [{'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'Identifies the pull request associated with this review request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'requestedReviewer', 'description': 'The reviewer that is requested.', 'args': [], 'type': {'kind': 'UNION', 'name': 'RequestedReviewer', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reviewer', 'description': 'Identifies the author associated with this review request.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Use `ReviewRequest.requestedReviewer` instead.'}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'UNION', 'name': 'RequestedReviewer', 'description': 'Types that can be requested reviewers.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'User', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Team', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'PullRequestTimelineConnection', 'description': 'The connection type for PullRequestTimelineItem.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestTimelineItemEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'UNION', 'name': 'PullRequestTimelineItem', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PullRequestTimelineItemEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'UNION', 'name': 'PullRequestTimelineItem', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'UNION', 'name': 'PullRequestTimelineItem', 'description': 'An item in an pull request timeline', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, {'kind': 'OBJECT', 'name': 'CommitCommentThread', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewThread', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ClosedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReopenedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'SubscribedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnsubscribedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'MergedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReferencedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'CrossReferencedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'AssignedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnassignedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'LabeledEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnlabeledEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'MilestonedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'DemilestonedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'RenamedTitleEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'LockedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnlockedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'DeployedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'HeadRefDeletedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'HeadRefRestoredEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'HeadRefForcePushedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'BaseRefForcePushedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReviewRequestedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReviewRequestRemovedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReviewDismissedEvent', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'CommitCommentThread', 'description': 'A thread of comments on a commit.', 'fields': [{'name': 'comments', 'description': 'The comments that exist in this thread.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'CommitCommentConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commit', 'description': 'The commit the comments were made on.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'path', 'description': 'The file the comments were made on.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'position', 'description': 'The position in the diff for the commit that the comment was made on.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository associated with this node.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'RepositoryNode', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ClosedEvent', 'description': "Represents a 'closed' event on any `Closable`.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'closable', 'description': 'Object that was closed.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Closable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commit', 'description': "Identifies the commit associated with the 'closed' event.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReopenedEvent', 'description': "Represents a 'reopened' event on any `Closable`.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'closable', 'description': 'Object that was reopened.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Closable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'SubscribedEvent', 'description': "Represents a 'subscribed' event on a given `Subscribable`.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subscribable', 'description': 'Object referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Subscribable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UnsubscribedEvent', 'description': "Represents an 'unsubscribed' event on a given `Subscribable`.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subscribable', 'description': 'Object referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Subscribable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'MergedEvent', 'description': "Represents a 'merged' event on a given pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commit', 'description': 'Identifies the commit associated with the `merge` event.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'mergeRef', 'description': 'Identifies the Ref associated with the `merge` event.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'mergeRefName', 'description': 'Identifies the name of the Ref associated with the `merge` event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'PullRequest referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this merged event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for this merged event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReferencedEvent', 'description': "Represents a 'referenced' event on a given `ReferencedSubject`.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commit', 'description': "Identifies the commit associated with the 'referenced' event.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitRepository', 'description': "Identifies the repository associated with the 'referenced' event.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isCrossReference', 'description': 'Reference originated in a different repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'Use ReferencedEvent.isCrossRepository instead.'}, {'name': 'isCrossRepository', 'description': 'Reference originated in a different repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isDirectReference', 'description': 'Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subject', 'description': 'Object referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'UNION', 'name': 'ReferencedSubject', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'UNION', 'name': 'ReferencedSubject', 'description': 'Any referencable object', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'CrossReferencedEvent', 'description': 'Represents a mention made by one issue or pull request to another.', 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isCrossRepository', 'description': 'Reference originated in a different repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'referencedAt', 'description': 'Identifies when the reference was made.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'source', 'description': 'Issue or pull request that made the reference.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'UNION', 'name': 'ReferencedSubject', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'target', 'description': 'Issue or pull request to which the reference was made.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'UNION', 'name': 'ReferencedSubject', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for this pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'willCloseTarget', 'description': 'Checks if the target will be closed when the source is merged.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'AssignedEvent', 'description': "Represents an 'assigned' event on any assignable object.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'assignable', 'description': 'Identifies the assignable associated with the event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Assignable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'user', 'description': 'Identifies the user who was assigned.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UnassignedEvent', 'description': "Represents an 'unassigned' event on any assignable object.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'assignable', 'description': 'Identifies the assignable associated with the event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Assignable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'user', 'description': 'Identifies the subject (user) who was unassigned.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'LabeledEvent', 'description': "Represents a 'labeled' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'label', 'description': "Identifies the label associated with the 'labeled' event.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Label', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'labelable', 'description': 'Identifies the `Labelable` associated with the event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Labelable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UnlabeledEvent', 'description': "Represents an 'unlabeled' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'label', 'description': "Identifies the label associated with the 'unlabeled' event.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Label', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'labelable', 'description': 'Identifies the `Labelable` associated with the event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Labelable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'MilestonedEvent', 'description': "Represents a 'milestoned' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'milestoneTitle', 'description': "Identifies the milestone title associated with the 'milestoned' event.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subject', 'description': 'Object referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'UNION', 'name': 'MilestoneItem', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'UNION', 'name': 'MilestoneItem', 'description': 'Types that can be inside a Milestone.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'DemilestonedEvent', 'description': "Represents a 'demilestoned' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'milestoneTitle', 'description': "Identifies the milestone title associated with the 'demilestoned' event.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subject', 'description': 'Object referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'UNION', 'name': 'MilestoneItem', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RenamedTitleEvent', 'description': "Represents a 'renamed' event on a given issue or pull request", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'currentTitle', 'description': 'Identifies the current title of the issue or pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'previousTitle', 'description': 'Identifies the previous title of the issue or pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subject', 'description': 'Subject that was renamed.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'UNION', 'name': 'RenamedTitleSubject', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'UNION', 'name': 'RenamedTitleSubject', 'description': 'An object which has a renamable title', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'LockedEvent', 'description': "Represents a 'locked' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lockable', 'description': 'Object that was locked.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Lockable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UnlockedEvent', 'description': "Represents an 'unlocked' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lockable', 'description': 'Object that was unlocked.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Lockable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeployedEvent', 'description': "Represents a 'deployed' event on a given pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'deployment', 'description': "The deployment associated with the 'deployed' event.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Deployment', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'PullRequest referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ref', 'description': "The ref associated with the 'deployed' event.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Deployment', 'description': 'Represents triggered deployment instance.', 'fields': [{'name': 'commit', 'description': 'Identifies the commit sha of the deployment.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'creator', 'description': 'Identifies the actor who triggered the deployment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'environment', 'description': 'The environment to which this deployment was made.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'latestStatus', 'description': 'The latest status of this deployment.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'DeploymentStatus', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'payload', 'description': 'Extra information that a deployment system might need.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'Identifies the repository associated with the deployment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'The current state of the deployment.', 'args': [], 'type': {'kind': 'ENUM', 'name': 'DeploymentState', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'statuses', 'description': 'A list of statuses associated with the deployment.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'DeploymentStatusConnection', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeploymentStatusConnection', 'description': 'The connection type for DeploymentStatus.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'DeploymentStatusEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'DeploymentStatus', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeploymentStatusEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'DeploymentStatus', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeploymentStatus', 'description': 'Describes the status of a given deployment attempt.', 'fields': [{'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'creator', 'description': 'Identifies the actor who triggered the deployment.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deployment', 'description': 'Identifies the deployment associated with status.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Deployment', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': 'Identifies the description of the deployment.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'environmentUrl', 'description': 'Identifies the environment URL of the deployment.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'logUrl', 'description': 'Identifies the log URL of the deployment.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'Identifies the current state of the deployment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'DeploymentStatusState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'DeploymentStatusState', 'description': 'The possible states for a deployment status.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'PENDING', 'description': 'The deployment is pending.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'SUCCESS', 'description': 'The deployment was successful.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'FAILURE', 'description': 'The deployment has failed.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'INACTIVE', 'description': 'The deployment is inactive.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ERROR', 'description': 'The deployment experienced an error.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'DeploymentState', 'description': 'The possible states in which a deployment can be.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'ABANDONED', 'description': 'The pending deployment was not updated after 30 minutes.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ACTIVE', 'description': 'The deployment is currently active.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'DESTROYED', 'description': 'An inactive transient deployment.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ERROR', 'description': 'The deployment experienced an error.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'FAILURE', 'description': 'The deployment has failed.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'INACTIVE', 'description': 'The deployment is inactive.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'PENDING', 'description': 'The deployment is pending.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'HeadRefDeletedEvent', 'description': "Represents a 'head_ref_deleted' event on a given pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'headRef', 'description': 'Identifies the Ref associated with the `head_ref_deleted` event.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'headRefName', 'description': 'Identifies the name of the Ref associated with the `head_ref_deleted` event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'PullRequest referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'HeadRefRestoredEvent', 'description': "Represents a 'head_ref_restored' event on a given pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'PullRequest referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'HeadRefForcePushedEvent', 'description': "Represents a 'head_ref_force_pushed' event on a given pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'afterCommit', 'description': "Identifies the after commit SHA for the 'head_ref_force_pushed' event.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'beforeCommit', 'description': "Identifies the before commit SHA for the 'head_ref_force_pushed' event.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'PullRequest referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ref', 'description': "Identifies the fully qualified ref name for the 'head_ref_force_pushed' event.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'BaseRefForcePushedEvent', 'description': "Represents a 'base_ref_force_pushed' event on a given pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'afterCommit', 'description': "Identifies the after commit SHA for the 'base_ref_force_pushed' event.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'beforeCommit', 'description': "Identifies the before commit SHA for the 'base_ref_force_pushed' event.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'PullRequest referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ref', 'description': "Identifies the fully qualified ref name for the 'base_ref_force_pushed' event.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReviewRequestedEvent', 'description': "Represents an 'review_requested' event on a given pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'PullRequest referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'requestedReviewer', 'description': 'Identifies the reviewer whose review was requested.', 'args': [], 'type': {'kind': 'UNION', 'name': 'RequestedReviewer', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subject', 'description': 'Identifies the user whose review was requested.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Use `ReviewRequestedEvent.requestedReviewer` instead.'}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReviewRequestRemovedEvent', 'description': "Represents an 'review_request_removed' event on a given pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'PullRequest referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'requestedReviewer', 'description': 'Identifies the reviewer whose review request was removed.', 'args': [], 'type': {'kind': 'UNION', 'name': 'RequestedReviewer', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subject', 'description': 'Identifies the user whose review request was removed.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Use ReviewRequestRemovedEvent.requestedReviewer instead.'}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReviewDismissedEvent', 'description': "Represents a 'review_dismissed' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'message', 'description': "Identifies the message associated with the 'review_dismissed' event.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'messageHtml', 'description': 'The message associated with the event, rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'previousReviewState', 'description': "Identifies the previous state of the review with the 'review_dismissed' event.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'PullRequestReviewState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'PullRequest referenced by event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequestCommit', 'description': 'Identifies the commit which caused the review to become stale.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PullRequestCommit', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this review dismissed event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'review', 'description': "Identifies the review associated with the 'review_dismissed' event.", 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for this review dismissed event.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'BaseRefChangedEvent', 'description': "Represents a 'base_ref_changed' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'AddedToProjectEvent', 'description': "Represents a 'added_to_project' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'CommentDeletedEvent', 'description': "Represents a 'comment_deleted' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ConvertedNoteToIssueEvent', 'description': "Represents a 'converted_note_to_issue' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'UNION', 'name': 'IssueOrPullRequest', 'description': 'Used for return value of Repository.issueOrPullRequest.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'MentionedEvent', 'description': "Represents a 'mentioned' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'MovedColumnsInProjectEvent', 'description': "Represents a 'moved_columns_in_project' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RemovedFromProjectEvent', 'description': "Represents a 'removed_from_project' event on a given issue or pull request.", 'fields': [{'name': 'actor', 'description': 'Identifies the actor who performed the event.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'databaseId', 'description': 'Identifies the primary key from the database.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Exposed database IDs will eventually be removed in favor of global Relay IDs.'}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'SuggestedReviewer', 'description': "A suggestion to review a pull request based on a user's commit history and review comments.", 'fields': [{'name': 'isAuthor', 'description': 'Is this suggestion based on past commits?', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isCommenter', 'description': 'Is this suggestion based on past review comments?', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reviewer', 'description': 'Identifies the user suggested to review the pull request.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'IssueTimelineConnection', 'description': 'The connection type for IssueTimelineItem.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueTimelineItemEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'UNION', 'name': 'IssueTimelineItem', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'IssueTimelineItemEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'UNION', 'name': 'IssueTimelineItem', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'UNION', 'name': 'IssueTimelineItem', 'description': 'An item in an issue timeline', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Commit', 'ofType': None}, {'kind': 'OBJECT', 'name': 'IssueComment', 'ofType': None}, {'kind': 'OBJECT', 'name': 'CrossReferencedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ClosedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReopenedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'SubscribedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnsubscribedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'ReferencedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'AssignedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnassignedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'LabeledEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnlabeledEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'MilestonedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'DemilestonedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'RenamedTitleEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'LockedEvent', 'ofType': None}, {'kind': 'OBJECT', 'name': 'UnlockedEvent', 'ofType': None}]}, {'kind': 'INTERFACE', 'name': 'RepositoryInfo', 'description': 'A subset of repository info.', 'fields': [{'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': 'The description of the repository.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'descriptionHTML', 'description': 'The description of the repository rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'forkCount', 'description': 'Returns how many forks there are of this repository in the whole network.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasIssuesEnabled', 'description': 'Indicates if the repository has issues feature enabled.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasWikiEnabled', 'description': 'Indicates if the repository has wiki feature enabled.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'homepageUrl', 'description': "The repository's URL.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isArchived', 'description': 'Indicates if the repository is unmaintained.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isFork', 'description': 'Identifies if the repository is a fork.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isLocked', 'description': 'Indicates if the repository has been locked or not.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isMirror', 'description': 'Identifies if the repository is a mirror.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isPrivate', 'description': 'Identifies if the repository is private.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'license', 'description': 'The license associated with the repository', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Use Repository.licenseInfo instead.'}, {'name': 'licenseInfo', 'description': 'The license associated with the repository', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'License', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lockReason', 'description': 'The reason the repository has been locked.', 'args': [], 'type': {'kind': 'ENUM', 'name': 'RepositoryLockReason', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'mirrorUrl', 'description': "The repository's original mirror URL.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The name of the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nameWithOwner', 'description': "The repository's name with owner.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'owner', 'description': 'The User owner of the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'RepositoryOwner', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pushedAt', 'description': 'Identifies when the repository was last pushed to.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this repository', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'shortDescriptionHTML', 'description': 'A description of the repository, rendered to HTML without any links in it.', 'args': [{'name': 'limit', 'description': 'How many characters to return.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': '200'}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this repository', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, {'kind': 'OBJECT', 'name': 'RepositoryInvitationRepository', 'ofType': None}]}, {'kind': 'ENUM', 'name': 'RepositoryLockReason', 'description': 'The possible reasons a given repository could be in a locked state.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'MOVING', 'description': 'The repository is locked due to a move.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'BILLING', 'description': 'The repository is locked due to a billing related reason.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'RENAME', 'description': 'The repository is locked due to a rename.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'MIGRATING', 'description': 'The repository is locked due to a migration.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'License', 'description': "A respository's open source license", 'fields': [{'name': 'body', 'description': 'The full text of the license', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'conditions', 'description': 'The conditions set by the license', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'LicenseRule', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': 'A human-readable description of the license', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'featured', 'description': 'Whether the license should be featured', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hidden', 'description': 'Whether the license should be displayed in license pickers', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'implementation', 'description': 'Instructions on how to implement the license', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'key', 'description': 'The lowercased SPDX ID of the license', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'limitations', 'description': 'The limitations set by the license', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'LicenseRule', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The license full name specified by <https://spdx.org/licenses>', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nickname', 'description': 'Customary short name if applicable (e.g, GPLv3)', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'permissions', 'description': 'The permissions set by the license', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'LicenseRule', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'spdxId', 'description': 'Short identifier specified by <https://spdx.org/licenses>', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'URL to the license on <https://choosealicense.com>', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'LicenseRule', 'description': "Describes a License's conditions, permissions, and limitations", 'fields': [{'name': 'description', 'description': 'A description of the rule', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'key', 'description': 'The machine-readable rule key', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'label', 'description': 'The human-readable rule label', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeployKeyConnection', 'description': 'The connection type for DeployKey.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'DeployKeyEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'DeployKey', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeployKeyEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'DeployKey', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeployKey', 'description': 'A repository deploy key.', 'fields': [{'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'key', 'description': 'The deploy key.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'readOnly', 'description': 'Whether or not the deploy key is read only.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'title', 'description': 'The deploy key title.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'verified', 'description': 'Whether or not the deploy key has been verified.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'RepositoryCollaboratorAffiliation', 'description': 'The affiliation type between collaborator and repository.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'ALL', 'description': 'All collaborators of the repository.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'OUTSIDE', 'description': 'All outside collaborators of an organization-owned repository.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RepositoryTopicConnection', 'description': 'The connection type for RepositoryTopic.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryTopicEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryTopic', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RepositoryTopicEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'RepositoryTopic', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RepositoryTopic', 'description': 'A repository-topic connects a repository to a topic.', 'fields': [{'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this repository-topic.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'topic', 'description': 'The topic.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Topic', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The HTTP URL for this repository-topic.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Topic', 'description': 'A topic aggregates entities that are related to a subject.', 'fields': [{'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': "The topic's name.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'relatedTopics', 'description': 'A list of related topics, including aliases of this topic, sorted with the most relevant\nfirst.\n', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Topic', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Release', 'description': 'A release contains the content for a release.', 'fields': [{'name': 'author', 'description': 'The author of the release', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': 'Identifies the description of the release.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isDraft', 'description': 'Whether or not the release is a draft', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isPrerelease', 'description': 'Whether or not the release is a prerelease', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'Identifies the title of the release.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'publishedAt', 'description': 'Identifies the date and time when the release was created.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'releaseAssets', 'description': 'List of releases assets which are dependent on this release.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'name', 'description': 'A list of names to filter the assets by.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReleaseAssetConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this issue', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'tag', 'description': 'The Git tag the release points to', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this issue', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'UniformResourceLocatable', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReleaseAssetConnection', 'description': 'The connection type for ReleaseAsset.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReleaseAssetEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReleaseAsset', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReleaseAssetEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'ReleaseAsset', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReleaseAsset', 'description': 'A release asset contains the content for a release asset.', 'fields': [{'name': 'contentType', 'description': "The asset's content-type", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'downloadCount', 'description': 'The number of times this asset was downloaded', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'downloadUrl', 'description': 'Identifies the URL where you can download the release asset via the browser.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'Identifies the title of the release asset.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'release', 'description': 'Release that the asset is associated with', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Release', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'size', 'description': 'The size (in bytes) of the asset', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'uploadedBy', 'description': 'The user that performed the upload', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'Identifies the URL of the release asset.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProtectedBranchConnection', 'description': 'The connection type for ProtectedBranch.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProtectedBranchEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProtectedBranch', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProtectedBranchEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'ProtectedBranch', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ProtectedBranch', 'description': 'A repository protected branch.', 'fields': [{'name': 'creator', 'description': 'The actor who created this protected branch.', 'args': [], 'type': {'kind': 'INTERFACE', 'name': 'Actor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasDismissableStaleReviews', 'description': 'Will new commits pushed to this branch dismiss pull request review approvals.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasRequiredReviews', 'description': 'Are reviews required to update this branch.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasRequiredStatusChecks', 'description': 'Are status checks required to update this branch.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasRestrictedPushes', 'description': 'Is pushing to this branch restricted.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasRestrictedReviewDismissals', 'description': 'Is dismissal of pull request reviews restricted.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasStrictRequiredStatusChecks', 'description': 'Are branches required to be up to date before merging.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isAdminEnforced', 'description': 'Can admins overwrite branch protection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'Identifies the name of the protected branch.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pushAllowances', 'description': 'A list push allowances for this protected branch.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PushAllowanceConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The repository associated with this protected branch.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'requiredStatusCheckContexts', 'description': 'List of required status check contexts that must pass for commits to be accepted to this branch.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reviewDismissalAllowances', 'description': 'A list review dismissal allowances for this protected branch.', 'args': [{'name': 'first', 'description': 'Returns the first _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'after', 'description': 'Returns the elements in the list that come after the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'last', 'description': 'Returns the last _n_ elements from the list.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'before', 'description': 'Returns the elements in the list that come before the specified global ID.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReviewDismissalAllowanceConnection', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReviewDismissalAllowanceConnection', 'description': 'The connection type for ReviewDismissalAllowance.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReviewDismissalAllowanceEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReviewDismissalAllowance', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReviewDismissalAllowanceEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'ReviewDismissalAllowance', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReviewDismissalAllowance', 'description': 'A team or user who has the ability to dismiss a review on a protected branch.', 'fields': [{'name': 'actor', 'description': 'The actor that can dismiss.', 'args': [], 'type': {'kind': 'UNION', 'name': 'ReviewDismissalAllowanceActor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'protectedBranch', 'description': 'Identifies the protected branch associated with the allowed user or team.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProtectedBranch', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'UNION', 'name': 'ReviewDismissalAllowanceActor', 'description': 'Types that can be an actor.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'User', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Team', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'PushAllowanceConnection', 'description': 'The connection type for PushAllowance.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PushAllowanceEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PushAllowance', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PushAllowanceEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PushAllowance', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PushAllowance', 'description': 'A team or user who has the ability to push to a protected branch.', 'fields': [{'name': 'actor', 'description': 'The actor that can push.', 'args': [], 'type': {'kind': 'UNION', 'name': 'PushAllowanceActor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'protectedBranch', 'description': 'Identifies the protected branch associated with the allowed user or team.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProtectedBranch', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'UNION', 'name': 'PushAllowanceActor', 'description': 'Types that can be an actor.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'User', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Team', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'MilestoneConnection', 'description': 'The connection type for Milestone.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'MilestoneEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Milestone', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'MilestoneEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Milestone', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'CodeOfConduct', 'description': 'The Code of Conduct for a repository', 'fields': [{'name': 'body', 'description': 'The body of the CoC', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'key', 'description': 'The key for the CoC', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The formal name of the CoC', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'url', 'description': 'The path to the CoC', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RepositoryCollaboratorConnection', 'description': 'The connection type for User.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RepositoryCollaboratorEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RepositoryCollaboratorEdge', 'description': 'Represents a user who is a collaborator of a repository.', 'fields': [{'name': 'cursor', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'permission', 'description': 'The permission the user has on the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RepositoryPermission', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'CollaboratorAffiliation', 'description': 'Collaborators affiliation level with a repository.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'OUTSIDE', 'description': 'All outside collaborators of an organization-owned repository.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'DIRECT', 'description': 'All collaborators with permissions to an organization-owned repository, regardless of organization membership status.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ALL', 'description': 'All collaborators the authenticated user can see.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'LanguageOrder', 'description': 'Ordering options for language connections.', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field to order languages by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'LanguageOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The ordering direction.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'LanguageOrderField', 'description': 'Properties by which language connections can be ordered.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'SIZE', 'description': 'Order languages by the size of all files containing the language', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RefConnection', 'description': 'The connection type for Ref.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'RefEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RefEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Ref', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'RefOrder', 'description': 'Ways in which lists of git refs can be ordered upon return.', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field in which to order refs by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'RefOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The direction in which to order refs by the specified field.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'RefOrderField', 'description': 'Properties by which ref connections can be ordered.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'TAG_COMMIT_DATE', 'description': 'Order refs by underlying commit date if the ref prefix is refs/tags/', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ALPHABETICAL', 'description': 'Order refs by their alphanumeric name', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReleaseConnection', 'description': 'The connection type for Release.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ReleaseEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Release', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'ReleaseEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Release', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'ReleaseOrder', 'description': 'Ways in which lists of releases can be ordered upon return.', 'fields': None, 'inputFields': [{'name': 'field', 'description': 'The field in which to order releases by.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ReleaseOrderField', 'ofType': None}}, 'defaultValue': None}, {'name': 'direction', 'description': 'The direction in which to order releases by the specified field.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'OrderDirection', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'ReleaseOrderField', 'description': 'Properties by which release connections can be ordered.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'CREATED_AT', 'description': 'Order releases by creation time', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'NAME', 'description': 'Order releases alphabetically by name', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeploymentConnection', 'description': 'The connection type for Deployment.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'DeploymentEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Deployment', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeploymentEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Deployment', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'SCALAR', 'name': 'GitSSHRemote', 'description': 'Git SSH string', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'TopicConnection', 'description': 'The connection type for Topic.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TopicEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Topic', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'TopicEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'Topic', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'RepositoryContributionType', 'description': "The reason a repository is listed as 'contributed'.", 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'COMMIT', 'description': 'Created a commit', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ISSUE', 'description': 'Created an issue', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'PULL_REQUEST', 'description': 'Created a pull request', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'REPOSITORY', 'description': 'Created the repository', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'PULL_REQUEST_REVIEW', 'description': 'Reviewed a pull request', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PublicKeyConnection', 'description': 'The connection type for PublicKey.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PublicKeyEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PublicKey', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PublicKeyEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'PublicKey', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'PublicKey', 'description': "A user's public key.", 'fields': [{'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'key', 'description': 'The public key string', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'FollowingConnection', 'description': 'The connection type for User.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'FollowerConnection', 'description': 'The connection type for User.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'StarredRepositoryConnection', 'description': 'The connection type for Repository.', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'StarredRepositoryEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'StarredRepositoryEdge', 'description': 'Represents a starred repository.', 'fields': [{'name': 'cursor', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'starredAt', 'description': 'Identifies when the item was starred.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RateLimit', 'description': "Represents the client's rate limit.", 'fields': [{'name': 'cost', 'description': 'The point cost for the current query counting against the rate limit.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'limit', 'description': 'The maximum number of points the client is permitted to consume in a 60 minute window.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodeCount', 'description': 'The maximum number of nodes this query may return', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'remaining', 'description': 'The number of points remaining in the current rate limit window.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resetAt', 'description': 'The time at which the current rate limit window resets in UTC epoch seconds.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'SearchResultItemConnection', 'description': 'A list of results that matched against a search query.', 'fields': [{'name': 'codeCount', 'description': 'The number of pieces of code that matched the search query.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'SearchResultItemEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'issueCount', 'description': 'The number of issues that matched the search query.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'UNION', 'name': 'SearchResultItem', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repositoryCount', 'description': 'The number of repositories that matched the search query.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'userCount', 'description': 'The number of users that matched the search query.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'wikiCount', 'description': 'The number of wiki pages that matched the search query.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'SearchResultItemEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'UNION', 'name': 'SearchResultItem', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'textMatches', 'description': 'Text matches on the result found.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TextMatch', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'UNION', 'name': 'SearchResultItem', 'description': 'The results of a search.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': [{'kind': 'OBJECT', 'name': 'Issue', 'ofType': None}, {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}, {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, {'kind': 'OBJECT', 'name': 'Organization', 'ofType': None}, {'kind': 'OBJECT', 'name': 'MarketplaceListing', 'ofType': None}]}, {'kind': 'OBJECT', 'name': 'TextMatch', 'description': 'A text match within a search result.', 'fields': [{'name': 'fragment', 'description': 'The specific text fragment within the property matched on.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'highlights', 'description': 'Highlights within the matched fragment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'TextMatchHighlight', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'property', 'description': 'The property matched on.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'TextMatchHighlight', 'description': 'Represents a single highlight in a search result match.', 'fields': [{'name': 'beginIndice', 'description': 'The indice in the fragment where the matched text begins.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'endIndice', 'description': 'The indice in the fragment where the matched text ends.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'text', 'description': 'The text matched.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'SearchType', 'description': 'Represents the individual results of a search.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'ISSUE', 'description': 'Returns results matching issues in repositories.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'REPOSITORY', 'description': 'Returns results matching repositories.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'USER', 'description': 'Returns results matching users and organizations on GitHub.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'SCALAR', 'name': 'Date', 'description': 'An ISO-8601 encoded date string.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'MarketplaceListingConnection', 'description': 'Look up Marketplace Listings', 'fields': [{'name': 'edges', 'description': 'A list of edges.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'MarketplaceListingEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nodes', 'description': 'A list of nodes.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'MarketplaceListing', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pageInfo', 'description': 'Information to aid in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PageInfo', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'totalCount', 'description': 'Identifies the total count of items in the connection.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'MarketplaceListingEdge', 'description': 'An edge in a connection.', 'fields': [{'name': 'cursor', 'description': 'A cursor for use in pagination.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'node', 'description': 'The item at the end of the edge.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'MarketplaceListing', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'GitHubMetadata', 'description': 'Represents information about the GitHub instance.', 'fields': [{'name': 'gitHubServicesSha', 'description': "Returns a String that's a SHA of `github-services`", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'gitIpAddresses', 'description': 'IP addresses that users connect to for git operations', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hookIpAddresses', 'description': 'IP addresses that service hooks are sent from', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'importerIpAddresses', 'description': 'IP addresses that the importer connects from', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isPasswordAuthenticationVerifiable', 'description': 'Whether or not users are verified', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pagesIpAddresses', 'description': "IP addresses for GitHub Pages' A records", 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Mutation', 'description': 'The root query for implementing GraphQL mutations.', 'fields': [{'name': 'acceptTopicSuggestion', 'description': 'Applies a suggested topic to the repository.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'AcceptTopicSuggestionInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'AcceptTopicSuggestionPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'addComment', 'description': 'Adds a comment to an Issue or Pull Request.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'AddCommentInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'AddCommentPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'addProjectCard', 'description': 'Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'AddProjectCardInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'AddProjectCardPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'addProjectColumn', 'description': 'Adds a column to a Project.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'AddProjectColumnInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'AddProjectColumnPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'addPullRequestReview', 'description': 'Adds a review to a Pull Request.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'AddPullRequestReviewInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'AddPullRequestReviewPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'addPullRequestReviewComment', 'description': 'Adds a comment to a review.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'AddPullRequestReviewCommentInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'AddPullRequestReviewCommentPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'addReaction', 'description': 'Adds a reaction to a subject.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'AddReactionInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'AddReactionPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'addStar', 'description': 'Adds a star to a Starrable.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'AddStarInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'AddStarPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'createProject', 'description': 'Creates a new project.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'CreateProjectInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'CreateProjectPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'declineTopicSuggestion', 'description': 'Rejects a suggested topic for the repository.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'DeclineTopicSuggestionInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'DeclineTopicSuggestionPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deleteProject', 'description': 'Deletes a project.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'DeleteProjectInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'DeleteProjectPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deleteProjectCard', 'description': 'Deletes a project card.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'DeleteProjectCardInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'DeleteProjectCardPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deleteProjectColumn', 'description': 'Deletes a project column.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'DeleteProjectColumnInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'DeleteProjectColumnPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deletePullRequestReview', 'description': 'Deletes a pull request review.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'DeletePullRequestReviewInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'DeletePullRequestReviewPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'dismissPullRequestReview', 'description': 'Dismisses an approved or rejected pull request review.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'DismissPullRequestReviewInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'DismissPullRequestReviewPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'moveProjectCard', 'description': 'Moves a project card to another place.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'MoveProjectCardInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'MoveProjectCardPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'moveProjectColumn', 'description': 'Moves a project column to another place.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'MoveProjectColumnInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'MoveProjectColumnPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'removeOutsideCollaborator', 'description': 'Removes outside collaborator from all repositories in an organization.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'RemoveOutsideCollaboratorInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'RemoveOutsideCollaboratorPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'removeReaction', 'description': 'Removes a reaction from a subject.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'RemoveReactionInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'RemoveReactionPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'removeStar', 'description': 'Removes a star from a Starrable.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'RemoveStarInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'RemoveStarPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'requestReviews', 'description': 'Set review requests on a pull request.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'RequestReviewsInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'RequestReviewsPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'submitPullRequestReview', 'description': 'Submits a pending pull request review.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'SubmitPullRequestReviewInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'SubmitPullRequestReviewPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updateProject', 'description': 'Updates an existing project.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'UpdateProjectInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'UpdateProjectPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updateProjectCard', 'description': 'Updates an existing project card.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'UpdateProjectCardInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'UpdateProjectCardPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updateProjectColumn', 'description': 'Updates an existing project column.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'UpdateProjectColumnInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'UpdateProjectColumnPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatePullRequestReview', 'description': 'Updates the body of a pull request review.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'UpdatePullRequestReviewInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'UpdatePullRequestReviewPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatePullRequestReviewComment', 'description': 'Updates a pull request review comment.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'UpdatePullRequestReviewCommentInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'UpdatePullRequestReviewCommentPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updateSubscription', 'description': 'Updates viewers repository subscription state.', 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'UpdateSubscriptionInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'UpdateSubscriptionPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updateTopics', 'description': "Replaces the repository's topics with the given topics.", 'args': [{'name': 'input', 'description': None, 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'UpdateTopicsInput', 'ofType': None}}, 'defaultValue': None}], 'type': {'kind': 'OBJECT', 'name': 'UpdateTopicsPayload', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'AddReactionPayload', 'description': 'Autogenerated return type of AddReaction', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reaction', 'description': 'The reaction object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Reaction', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subject', 'description': 'The reactable subject.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Reactable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'AddReactionInput', 'description': 'Autogenerated input type of AddReaction', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'subjectId', 'description': 'The Node ID of the subject to modify.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'content', 'description': 'The name of the emoji to react with.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ReactionContent', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RemoveReactionPayload', 'description': 'Autogenerated return type of RemoveReaction', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reaction', 'description': 'The reaction object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Reaction', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subject', 'description': 'The reactable subject.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Reactable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'RemoveReactionInput', 'description': 'Autogenerated input type of RemoveReaction', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'subjectId', 'description': 'The Node ID of the subject to modify.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'content', 'description': 'The name of the emoji to react with.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'ReactionContent', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UpdateSubscriptionPayload', 'description': 'Autogenerated return type of UpdateSubscription', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subscribable', 'description': 'The input subscribable entity.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Subscribable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'UpdateSubscriptionInput', 'description': 'Autogenerated input type of UpdateSubscription', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'subscribableId', 'description': 'The Node ID of the subscribable object to modify.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'state', 'description': 'The new state of the subscription.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'SubscriptionState', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'AddCommentPayload', 'description': 'Autogenerated return type of AddComment', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commentEdge', 'description': "The edge from the subject's comment connection.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueCommentEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subject', 'description': 'The subject', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'timelineEdge', 'description': "The edge from the subject's timeline connection.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'IssueTimelineItemEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'AddCommentInput', 'description': 'Autogenerated input type of AddComment', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'subjectId', 'description': 'The Node ID of the subject to modify.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'body', 'description': 'The contents of the comment.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'CreateProjectPayload', 'description': 'Autogenerated return type of CreateProject', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'project', 'description': 'The new project.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'CreateProjectInput', 'description': 'Autogenerated input type of CreateProject', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'ownerId', 'description': 'The owner ID to create the project under.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'name', 'description': 'The name of project.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}, {'name': 'body', 'description': 'The description of project.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UpdateProjectPayload', 'description': 'Autogenerated return type of UpdateProject', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'project', 'description': 'The updated project.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'UpdateProjectInput', 'description': 'Autogenerated input type of UpdateProject', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'projectId', 'description': 'The Project ID to update.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'name', 'description': 'The name of project.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'body', 'description': 'The description of project.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'state', 'description': 'Whether the project is open or closed.', 'type': {'kind': 'ENUM', 'name': 'ProjectState', 'ofType': None}, 'defaultValue': None}, {'name': 'public', 'description': 'Whether the project is public or not.', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeleteProjectPayload', 'description': 'Autogenerated return type of DeleteProject', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'owner', 'description': 'The repository or organization the project was removed from.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'ProjectOwner', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'DeleteProjectInput', 'description': 'Autogenerated input type of DeleteProject', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'projectId', 'description': 'The Project ID to update.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'AddProjectColumnPayload', 'description': 'Autogenerated return type of AddProjectColumn', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'columnEdge', 'description': "The edge from the project's column connection.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectColumnEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'project', 'description': 'The project', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'AddProjectColumnInput', 'description': 'Autogenerated input type of AddProjectColumn', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'projectId', 'description': 'The Node ID of the project.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'name', 'description': 'The name of the column.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'MoveProjectColumnPayload', 'description': 'Autogenerated return type of MoveProjectColumn', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'columnEdge', 'description': 'The new edge of the moved column.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectColumnEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'MoveProjectColumnInput', 'description': 'Autogenerated input type of MoveProjectColumn', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'columnId', 'description': 'The id of the column to move.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'afterColumnId', 'description': 'Place the new column after the column with this id. Pass null to place it at the front.', 'type': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UpdateProjectColumnPayload', 'description': 'Autogenerated return type of UpdateProjectColumn', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectColumn', 'description': 'The updated project column.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectColumn', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'UpdateProjectColumnInput', 'description': 'Autogenerated input type of UpdateProjectColumn', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'projectColumnId', 'description': 'The ProjectColumn ID to update.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'name', 'description': 'The name of project column.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeleteProjectColumnPayload', 'description': 'Autogenerated return type of DeleteProjectColumn', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deletedColumnId', 'description': 'The deleted column ID.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'project', 'description': 'The project the deleted column was in.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'DeleteProjectColumnInput', 'description': 'Autogenerated input type of DeleteProjectColumn', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'columnId', 'description': 'The id of the column to delete.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'AddProjectCardPayload', 'description': 'Autogenerated return type of AddProjectCard', 'fields': [{'name': 'cardEdge', 'description': "The edge from the ProjectColumn's card connection.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectCardEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectColumn', 'description': 'The ProjectColumn', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Project', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'AddProjectCardInput', 'description': 'Autogenerated input type of AddProjectCard', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'projectColumnId', 'description': 'The Node ID of the ProjectColumn.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'contentId', 'description': 'The content of the card. Must be a member of the ProjectCardItem union', 'type': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}, 'defaultValue': None}, {'name': 'note', 'description': 'The note on the card.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UpdateProjectCardPayload', 'description': 'Autogenerated return type of UpdateProjectCard', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'projectCard', 'description': 'The updated ProjectCard.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectCard', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'UpdateProjectCardInput', 'description': 'Autogenerated input type of UpdateProjectCard', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'projectCardId', 'description': 'The ProjectCard ID to update.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'note', 'description': 'The note of ProjectCard.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'MoveProjectCardPayload', 'description': 'Autogenerated return type of MoveProjectCard', 'fields': [{'name': 'cardEdge', 'description': 'The new edge of the moved card.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectCardEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'MoveProjectCardInput', 'description': 'Autogenerated input type of MoveProjectCard', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'cardId', 'description': 'The id of the card to move.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'columnId', 'description': 'The id of the column to move it into.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'afterCardId', 'description': 'Place the new card after the card with this id. Pass null to place it at the top.', 'type': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeleteProjectCardPayload', 'description': 'Autogenerated return type of DeleteProjectCard', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'column', 'description': 'The column the deleted card was in.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'ProjectColumn', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'deletedCardId', 'description': 'The deleted card ID.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'DeleteProjectCardInput', 'description': 'Autogenerated input type of DeleteProjectCard', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'cardId', 'description': 'The id of the card to delete.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'AddPullRequestReviewPayload', 'description': 'Autogenerated return type of AddPullRequestReview', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequestReview', 'description': 'The newly created pull request review.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'reviewEdge', 'description': "The edge from the pull request's review connection.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReviewEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'AddPullRequestReviewInput', 'description': 'Autogenerated input type of AddPullRequestReview', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'pullRequestId', 'description': 'The Node ID of the pull request to modify.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'commitOID', 'description': 'The commit OID the review pertains to.', 'type': {'kind': 'SCALAR', 'name': 'GitObjectID', 'ofType': None}, 'defaultValue': None}, {'name': 'body', 'description': 'The contents of the review body comment.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'event', 'description': 'The event to perform on the pull request review.', 'type': {'kind': 'ENUM', 'name': 'PullRequestReviewEvent', 'ofType': None}, 'defaultValue': None}, {'name': 'comments', 'description': 'The review line comments.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'INPUT_OBJECT', 'name': 'DraftPullRequestReviewComment', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'PullRequestReviewEvent', 'description': 'The possible events to perform on a pull request review.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'COMMENT', 'description': 'Submit general feedback without explicit approval.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'APPROVE', 'description': 'Submit feedback and approve merging these changes.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'REQUEST_CHANGES', 'description': 'Submit feedback that must be addressed before merging.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'DISMISS', 'description': 'Dismiss review so it now longer effects merging.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'DraftPullRequestReviewComment', 'description': 'Specifies a review comment to be left with a Pull Request Review.', 'fields': None, 'inputFields': [{'name': 'path', 'description': 'Path to the file being commented on.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}, {'name': 'position', 'description': 'Position in the file to leave a comment on.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'defaultValue': None}, {'name': 'body', 'description': 'Body of the comment to leave.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'SubmitPullRequestReviewPayload', 'description': 'Autogenerated return type of SubmitPullRequestReview', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequestReview', 'description': 'The submitted pull request review.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'SubmitPullRequestReviewInput', 'description': 'Autogenerated input type of SubmitPullRequestReview', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'pullRequestReviewId', 'description': 'The Pull Request Review ID to submit.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'event', 'description': 'The event to send to the Pull Request Review.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'PullRequestReviewEvent', 'ofType': None}}, 'defaultValue': None}, {'name': 'body', 'description': 'The text field to set on the Pull Request Review.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UpdatePullRequestReviewPayload', 'description': 'Autogenerated return type of UpdatePullRequestReview', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequestReview', 'description': 'The updated pull request review.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'UpdatePullRequestReviewInput', 'description': 'Autogenerated input type of UpdatePullRequestReview', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'pullRequestReviewId', 'description': 'The Node ID of the pull request review to modify.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'body', 'description': 'The contents of the pull request review body.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DismissPullRequestReviewPayload', 'description': 'Autogenerated return type of DismissPullRequestReview', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequestReview', 'description': 'The dismissed pull request review.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'DismissPullRequestReviewInput', 'description': 'Autogenerated input type of DismissPullRequestReview', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'pullRequestReviewId', 'description': 'The Node ID of the pull request review to modify.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'message', 'description': 'The contents of the pull request review dismissal message.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeletePullRequestReviewPayload', 'description': 'Autogenerated return type of DeletePullRequestReview', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequestReview', 'description': 'The deleted pull request review.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReview', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'DeletePullRequestReviewInput', 'description': 'Autogenerated input type of DeletePullRequestReview', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'pullRequestReviewId', 'description': 'The Node ID of the pull request review to delete.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'AddPullRequestReviewCommentPayload', 'description': 'Autogenerated return type of AddPullRequestReviewComment', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'comment', 'description': 'The newly created comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commentEdge', 'description': "The edge from the review's comment connection.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReviewCommentEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'AddPullRequestReviewCommentInput', 'description': 'Autogenerated input type of AddPullRequestReviewComment', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'pullRequestReviewId', 'description': 'The Node ID of the review to modify.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'commitOID', 'description': 'The SHA of the commit to comment on.', 'type': {'kind': 'SCALAR', 'name': 'GitObjectID', 'ofType': None}, 'defaultValue': None}, {'name': 'body', 'description': 'The text of the comment.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}, {'name': 'path', 'description': 'The relative path of the file to comment on.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'position', 'description': 'The line index in the diff to comment on.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': None}, {'name': 'inReplyTo', 'description': 'The comment id to reply to.', 'type': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UpdatePullRequestReviewCommentPayload', 'description': 'Autogenerated return type of UpdatePullRequestReviewComment', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequestReviewComment', 'description': 'The updated comment.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequestReviewComment', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'UpdatePullRequestReviewCommentInput', 'description': 'Autogenerated input type of UpdatePullRequestReviewComment', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'pullRequestReviewCommentId', 'description': 'The Node ID of the comment to modify.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'body', 'description': 'The text of the comment.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RemoveOutsideCollaboratorPayload', 'description': 'Autogenerated return type of RemoveOutsideCollaborator', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'removedUser', 'description': 'The user that was removed as an outside collaborator.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'RemoveOutsideCollaboratorInput', 'description': 'Autogenerated input type of RemoveOutsideCollaborator', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'userId', 'description': 'The ID of the outside collaborator to remove.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'organizationId', 'description': 'The ID of the organization to remove the outside collaborator from.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RequestReviewsPayload', 'description': 'Autogenerated return type of RequestReviews', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pullRequest', 'description': 'The pull request that is getting requests.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'PullRequest', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'requestedReviewersEdge', 'description': 'The edge from the pull request to the requested reviewers.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'UserEdge', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'RequestReviewsInput', 'description': 'Autogenerated input type of RequestReviews', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'pullRequestId', 'description': 'The Node ID of the pull request to modify.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'userIds', 'description': 'The Node IDs of the user to request.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}}, 'defaultValue': None}, {'name': 'teamIds', 'description': 'The Node IDs of the team to request.', 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}}, 'defaultValue': None}, {'name': 'union', 'description': 'Add users to the set rather than replace.', 'type': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'AddStarPayload', 'description': 'Autogenerated return type of AddStar', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'starrable', 'description': 'The starrable.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Starrable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'AddStarInput', 'description': 'Autogenerated input type of AddStar', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'starrableId', 'description': 'The Starrable ID to star.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RemoveStarPayload', 'description': 'Autogenerated return type of RemoveStar', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'starrable', 'description': 'The starrable.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'Starrable', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'RemoveStarInput', 'description': 'Autogenerated input type of RemoveStar', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'starrableId', 'description': 'The Starrable ID to unstar.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'AcceptTopicSuggestionPayload', 'description': 'Autogenerated return type of AcceptTopicSuggestion', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'topic', 'description': 'The accepted topic.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Topic', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'AcceptTopicSuggestionInput', 'description': 'Autogenerated input type of AcceptTopicSuggestion', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'repositoryId', 'description': 'The Node ID of the repository.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'name', 'description': 'The name of the suggested topic.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'DeclineTopicSuggestionPayload', 'description': 'Autogenerated return type of DeclineTopicSuggestion', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'topic', 'description': 'The declined topic.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Topic', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'DeclineTopicSuggestionInput', 'description': 'Autogenerated input type of DeclineTopicSuggestion', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'repositoryId', 'description': 'The Node ID of the repository.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'name', 'description': 'The name of the suggested topic.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'defaultValue': None}, {'name': 'reason', 'description': 'The reason why the suggested topic is declined.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'TopicSuggestionDeclineReason', 'ofType': None}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': 'TopicSuggestionDeclineReason', 'description': 'Reason that the suggested topic is declined.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'NOT_RELEVANT', 'description': 'The suggested topic is not relevant to the repository.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'TOO_SPECIFIC', 'description': 'The suggested topic is too specific for the repository (e.g. #ruby-on-rails-version-4-2-1).', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'PERSONAL_PREFERENCE', 'description': 'The viewer does not like the suggested topic.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'TOO_GENERAL', 'description': 'The suggested topic is too general for the repository.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UpdateTopicsPayload', 'description': 'Autogenerated return type of UpdateTopics', 'fields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'invalidTopicNames', 'description': 'Names of the provided topics that are not valid.', 'args': [], 'type': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The updated repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'INPUT_OBJECT', 'name': 'UpdateTopicsInput', 'description': 'Autogenerated input type of UpdateTopics', 'fields': None, 'inputFields': [{'name': 'clientMutationId', 'description': 'A unique identifier for the client performing the mutation.', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': None}, {'name': 'repositoryId', 'description': 'The Node ID of the repository.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'defaultValue': None}, {'name': 'topicNames', 'description': 'An array of topic names.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}}}, 'defaultValue': None}], 'interfaces': None, 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': '__Schema', 'description': 'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.', 'fields': [{'name': 'directives', 'description': 'A list of all directives supported by this server.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__Directive', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'mutationType', 'description': 'If this server supports mutation, the type that mutation operations will be rooted at.', 'args': [], 'type': {'kind': 'OBJECT', 'name': '__Type', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'queryType', 'description': 'The type that query operations will be rooted at.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__Type', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'subscriptionType', 'description': 'If this server support subscription, the type that subscription operations will be rooted at.', 'args': [], 'type': {'kind': 'OBJECT', 'name': '__Type', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'types', 'description': 'A list of all types supported by this server.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__Type', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': '__Directive', 'description': "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.", 'fields': [{'name': 'args', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': '__InputValue', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': None, 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'locations', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'LIST', 'name': None, 'ofType': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': '__DirectiveLocation', 'ofType': None}}}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'onField', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'Use `locations`.'}, {'name': 'onFragment', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'Use `locations`.'}, {'name': 'onOperation', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'Use `locations`.'}], 'inputFields': None, 'interfaces': [], 'enumValues': None, 'possibleTypes': None}, {'kind': 'ENUM', 'name': '__DirectiveLocation', 'description': 'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.', 'fields': None, 'inputFields': None, 'interfaces': None, 'enumValues': [{'name': 'QUERY', 'description': 'Location adjacent to a query operation.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'MUTATION', 'description': 'Location adjacent to a mutation operation.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'SUBSCRIPTION', 'description': 'Location adjacent to a subscription operation.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'FIELD', 'description': 'Location adjacent to a field.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'FRAGMENT_DEFINITION', 'description': 'Location adjacent to a fragment definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'FRAGMENT_SPREAD', 'description': 'Location adjacent to a fragment spread.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'INLINE_FRAGMENT', 'description': 'Location adjacent to an inline fragment.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'SCHEMA', 'description': 'Location adjacent to a schema definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'SCALAR', 'description': 'Location adjacent to a scalar definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'OBJECT', 'description': 'Location adjacent to an object type definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'FIELD_DEFINITION', 'description': 'Location adjacent to a field definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ARGUMENT_DEFINITION', 'description': 'Location adjacent to an argument definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'INTERFACE', 'description': 'Location adjacent to an interface definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'UNION', 'description': 'Location adjacent to a union definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ENUM', 'description': 'Location adjacent to an enum definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'ENUM_VALUE', 'description': 'Location adjacent to an enum value definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'INPUT_OBJECT', 'description': 'Location adjacent to an input object type definition.', 'isDeprecated': False, 'deprecationReason': None}, {'name': 'INPUT_FIELD_DEFINITION', 'description': 'Location adjacent to an input object field definition.', 'isDeprecated': False, 'deprecationReason': None}], 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'GpgSignature', 'description': 'Represents a GPG signature on a Commit or Tag.', 'fields': [{'name': 'email', 'description': 'Email used to sign this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isValid', 'description': 'True if the signature is valid and verified by GitHub.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'keyId', 'description': 'Hex-encoded ID of the key that signed this object.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'payload', 'description': 'Payload for GPG signing object. Raw ODB object without the signature header.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'signature', 'description': 'ASCII-armored signature header from object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'signer', 'description': 'GitHub user corresponding to the email signing this commit.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'GitSignatureState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'GitSignature', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RepositoryInvitation', 'description': 'An invitation for a user to be added to a repository.', 'fields': [{'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'invitee', 'description': 'The user who received the invitation.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'inviter', 'description': 'The user who created the invitation.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The Repository the user is invited to.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'RepositoryInvitationRepository', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'RepositoryInvitationRepository', 'description': 'A subset of repository info shared with potential collaborators.', 'fields': [{'name': 'createdAt', 'description': 'Identifies the date and time when the object was created.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'description', 'description': 'The description of the repository.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'descriptionHTML', 'description': 'The description of the repository rendered to HTML.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'forkCount', 'description': 'Returns how many forks there are of this repository in the whole network.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasIssuesEnabled', 'description': 'Indicates if the repository has issues feature enabled.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'hasWikiEnabled', 'description': 'Indicates if the repository has wiki feature enabled.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'homepageUrl', 'description': "The repository's URL.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isArchived', 'description': 'Indicates if the repository is unmaintained.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isFork', 'description': 'Identifies if the repository is a fork.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isLocked', 'description': 'Indicates if the repository has been locked or not.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isMirror', 'description': 'Identifies if the repository is a mirror.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isPrivate', 'description': 'Identifies if the repository is private.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'license', 'description': 'The license associated with the repository', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': True, 'deprecationReason': 'Use Repository.licenseInfo instead.'}, {'name': 'licenseInfo', 'description': 'The license associated with the repository', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'License', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'lockReason', 'description': 'The reason the repository has been locked.', 'args': [], 'type': {'kind': 'ENUM', 'name': 'RepositoryLockReason', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'mirrorUrl', 'description': "The repository's original mirror URL.", 'args': [], 'type': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The name of the repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'nameWithOwner', 'description': "The repository's name with owner.", 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'owner', 'description': 'The owner of the repository associated with this invitation repository.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'RepositoryOwner', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'pushedAt', 'description': 'Identifies when the repository was last pushed to.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'resourcePath', 'description': 'The HTTP path for this repository', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'shortDescriptionHTML', 'description': 'A description of the repository, rendered to HTML without any links in it.', 'args': [{'name': 'limit', 'description': 'How many characters to return.', 'type': {'kind': 'SCALAR', 'name': 'Int', 'ofType': None}, 'defaultValue': '200'}], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'HTML', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'updatedAt', 'description': 'Identifies the date and time when the object was last updated.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'DateTime', 'ofType': None}}, 'isDeprecated': True, 'deprecationReason': 'General type updated timestamps will eventually be replaced by other field specific timestamps.'}, {'name': 'url', 'description': 'The HTTP URL for this repository', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'RepositoryInfo', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'SmimeSignature', 'description': 'Represents an S/MIME signature on a Commit or Tag.', 'fields': [{'name': 'email', 'description': 'Email used to sign this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isValid', 'description': 'True if the signature is valid and verified by GitHub.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'payload', 'description': 'Payload for GPG signing object. Raw ODB object without the signature header.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'signature', 'description': 'ASCII-armored signature header from object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'signer', 'description': 'GitHub user corresponding to the email signing this commit.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'GitSignatureState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'GitSignature', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'Tag', 'description': 'Represents a Git tag.', 'fields': [{'name': 'abbreviatedOid', 'description': 'An abbreviated version of the Git object ID', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitResourcePath', 'description': 'The HTTP path for this Git object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'commitUrl', 'description': 'The HTTP URL for this Git object', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'URI', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'id', 'description': None, 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'ID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'message', 'description': 'The Git tag message.', 'args': [], 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'name', 'description': 'The Git tag name.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'oid', 'description': 'The Git object ID', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'GitObjectID', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'repository', 'description': 'The Repository the Git object belongs to', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'OBJECT', 'name': 'Repository', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'tagger', 'description': 'Details about the tag author.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'GitActor', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'target', 'description': 'The Git object the tag points to.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'INTERFACE', 'name': 'GitObject', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'Node', 'ofType': None}, {'kind': 'INTERFACE', 'name': 'GitObject', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}, {'kind': 'OBJECT', 'name': 'UnknownSignature', 'description': 'Represents an unknown signature on a Commit or Tag.', 'fields': [{'name': 'email', 'description': 'Email used to sign this object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'isValid', 'description': 'True if the signature is valid and verified by GitHub.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'payload', 'description': 'Payload for GPG signing object. Raw ODB object without the signature header.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'signature', 'description': 'ASCII-armored signature header from object.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'signer', 'description': 'GitHub user corresponding to the email signing this commit.', 'args': [], 'type': {'kind': 'OBJECT', 'name': 'User', 'ofType': None}, 'isDeprecated': False, 'deprecationReason': None}, {'name': 'state', 'description': 'The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.', 'args': [], 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'ENUM', 'name': 'GitSignatureState', 'ofType': None}}, 'isDeprecated': False, 'deprecationReason': None}], 'inputFields': None, 'interfaces': [{'kind': 'INTERFACE', 'name': 'GitSignature', 'ofType': None}], 'enumValues': None, 'possibleTypes': None}], 'directives': [{'name': 'include', 'description': 'Directs the executor to include this field or fragment only when the `if` argument is true.', 'locations': ['FIELD', 'FRAGMENT_SPREAD', 'INLINE_FRAGMENT'], 'args': [{'name': 'if', 'description': 'Included when true.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'defaultValue': None}]}, {'name': 'skip', 'description': 'Directs the executor to skip this field or fragment when the `if` argument is true.', 'locations': ['FIELD', 'FRAGMENT_SPREAD', 'INLINE_FRAGMENT'], 'args': [{'name': 'if', 'description': 'Skipped when true.', 'type': {'kind': 'NON_NULL', 'name': None, 'ofType': {'kind': 'SCALAR', 'name': 'Boolean', 'ofType': None}}, 'defaultValue': None}]}, {'name': 'deprecated', 'description': 'Marks an element of a GraphQL schema as no longer supported.', 'locations': ['FIELD_DEFINITION', 'ENUM_VALUE'], 'args': [{'name': 'reason', 'description': 'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted in [Markdown](https://daringfireball.net/projects/markdown/).', 'type': {'kind': 'SCALAR', 'name': 'String', 'ofType': None}, 'defaultValue': '"No longer supported"'}]}]}}
